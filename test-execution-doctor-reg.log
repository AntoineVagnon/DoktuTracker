{
  "config": {
    "configFile": "C:\\Users\\mings\\.apps\\DoktuTracker\\playwright.config.ts",
    "rootDir": "C:/Users/mings/.apps/DoktuTracker/tests",
    "forbidOnly": false,
    "fullyParallel": false,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 1
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "html"
      ],
      [
        "json"
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "C:/Users/mings/.apps/DoktuTracker/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "setup",
        "name": "setup",
        "testDir": "C:/Users/mings/.apps/DoktuTracker/tests",
        "testIgnore": [
          "**/test-admin-login.spec.ts"
        ],
        "testMatch": [
          "/.*\\.setup\\.ts/"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "C:/Users/mings/.apps/DoktuTracker/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "chromium",
        "name": "chromium",
        "testDir": "C:/Users/mings/.apps/DoktuTracker/tests",
        "testIgnore": [
          "**/test-admin-login.spec.ts"
        ],
        "testMatch": [
          "/.*\\.(spec|test|setup)\\.(ts|js)$/"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "C:/Users/mings/.apps/DoktuTracker/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "doctor",
        "name": "doctor",
        "testDir": "C:/Users/mings/.apps/DoktuTracker/tests",
        "testIgnore": [
          "**/test-admin-login.spec.ts"
        ],
        "testMatch": [
          "/.*\\.(spec|test|setup)\\.(ts|js)$/"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "C:/Users/mings/.apps/DoktuTracker/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "patient",
        "name": "patient",
        "testDir": "C:/Users/mings/.apps/DoktuTracker/tests",
        "testIgnore": [
          "**/test-admin-login.spec.ts"
        ],
        "testMatch": [
          "/.*\\.(spec|test|setup)\\.(ts|js)$/"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "C:/Users/mings/.apps/DoktuTracker/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "firefox",
        "name": "firefox",
        "testDir": "C:/Users/mings/.apps/DoktuTracker/tests",
        "testIgnore": [
          "**/test-admin-login.spec.ts"
        ],
        "testMatch": [
          "/.*\\.(spec|test|setup)\\.(ts|js)$/"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "C:/Users/mings/.apps/DoktuTracker/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "webkit",
        "name": "webkit",
        "testDir": "C:/Users/mings/.apps/DoktuTracker/tests",
        "testIgnore": [
          "**/test-admin-login.spec.ts"
        ],
        "testMatch": [
          "/.*\\.(spec|test|setup)\\.(ts|js)$/"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "C:/Users/mings/.apps/DoktuTracker/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "Mobile Chrome",
        "name": "Mobile Chrome",
        "testDir": "C:/Users/mings/.apps/DoktuTracker/tests",
        "testIgnore": [
          "**/test-admin-login.spec.ts"
        ],
        "testMatch": [
          "/.*\\.(spec|test|setup)\\.(ts|js)$/"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "C:/Users/mings/.apps/DoktuTracker/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "Mobile Safari",
        "name": "Mobile Safari",
        "testDir": "C:/Users/mings/.apps/DoktuTracker/tests",
        "testIgnore": [
          "**/test-admin-login.spec.ts"
        ],
        "testMatch": [
          "/.*\\.(spec|test|setup)\\.(ts|js)$/"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "C:/Users/mings/.apps/DoktuTracker/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "Microsoft Edge",
        "name": "Microsoft Edge",
        "testDir": "C:/Users/mings/.apps/DoktuTracker/tests",
        "testIgnore": [
          "**/test-admin-login.spec.ts"
        ],
        "testMatch": [
          "/.*\\.(spec|test|setup)\\.(ts|js)$/"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "C:/Users/mings/.apps/DoktuTracker/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "Google Chrome",
        "name": "Google Chrome",
        "testDir": "C:/Users/mings/.apps/DoktuTracker/tests",
        "testIgnore": [
          "**/test-admin-login.spec.ts"
        ],
        "testMatch": [
          "/.*\\.(spec|test|setup)\\.(ts|js)$/"
        ],
        "timeout": 60000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.55.1",
    "workers": 1,
    "webServer": null
  },
  "suites": [
    {
      "title": "auth-doctor.setup.ts",
      "file": "auth-doctor.setup.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "authenticate as test doctor",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "setup",
              "projectName": "setup",
              "results": [
                {
                  "workerIndex": 0,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 2198,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "\nüîê Authenticating test doctor via API...\n"
                    },
                    {
                      "text": "Email: test.doctor.1760200122865@doktu.co\n"
                    },
                    {
                      "text": "‚úÖ Authenticated as test doctor\n"
                    },
                    {
                      "text": "Session ID: Bu_nOgUz-nT1AWaXqA4syBuhD7Tv4NVy\n"
                    },
                    {
                      "text": "‚úÖ Doctor authentication state saved\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-14T15:23:41.507Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "59362bb762b3c546c5ee-0edd3aa8338fc5210474",
          "file": "auth-doctor.setup.ts",
          "line": 15,
          "column": 1
        }
      ]
    },
    {
      "title": "auth-patient.setup.ts",
      "file": "auth-patient.setup.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "authenticate as test patient",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "setup",
              "projectName": "setup",
              "results": [
                {
                  "workerIndex": 0,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 3251,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "\nüîê Authenticating test patient via API...\n"
                    },
                    {
                      "text": "Email: kalyos.officiel@gmail.com\n"
                    },
                    {
                      "text": "‚úÖ Authenticated as test patient\n"
                    },
                    {
                      "text": "Session ID: 10NbuG1qqRHnAY1qHAt3cOW31IMrcVtH\n"
                    },
                    {
                      "text": "‚úÖ Patient authentication state saved to ./playwright/.auth/patient.json\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-14T15:23:43.737Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "4ce83a4f1ea43d0f4546-5e7b862a37511dc9e5fd",
          "file": "auth-patient.setup.ts",
          "line": 15,
          "column": 1
        }
      ]
    },
    {
      "title": "auth.setup.ts",
      "file": "auth.setup.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "authenticate as admin",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 60000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "setup",
              "projectName": "setup",
              "results": [
                {
                  "workerIndex": 0,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 3464,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "‚úì Authenticated as antoine.vagnon@gmail.com (admin)\n"
                    },
                    {
                      "text": "‚úì Admin dashboard accessible\n"
                    },
                    {
                      "text": "‚úì Admin authentication state saved\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-14T15:23:47.143Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "17e3fe6f4d9d8bd79c6b-1580989d32f149e984ed",
          "file": "auth.setup.ts",
          "line": 14,
          "column": 1
        }
      ]
    },
    {
      "title": "api\\doctor-registration-comprehensive.spec.ts",
      "file": "api/doctor-registration-comprehensive.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Doctor Registration API - Comprehensive Tests",
          "file": "api/doctor-registration-comprehensive.spec.ts",
          "line": 27,
          "column": 6,
          "specs": [
            {
              "title": "[P0] POST /api/doctor-registration/signup - Valid registration with all required fields",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 103,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 350,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:59:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 59
                        },
                        "snippet": "\u001b[0m \u001b[90m 57 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Response:'\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(body\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m;\u001b[39m\n \u001b[90m 58 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'userId'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'doctorId'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 59
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  57 |     console.log('Response:', JSON.stringify(body, null, 2));\n  58 |\n> 59 |     expect(response.status()).toBe(201);\n     |                               ^\n  60 |     expect(body.success).toBe(true);\n  61 |     expect(body.data).toHaveProperty('userId');\n  62 |     expect(body.data).toHaveProperty('doctorId');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:59:31"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "‚úÖ Test: Valid registration\n"
                        },
                        {
                          "text": "Status: \u001b[33m429\u001b[39m\n"
                        },
                        {
                          "text": "Response: {\n  \"error\": \"Too many registration attempts. Please try again later.\",\n  \"retryAfter\": 3600\n}\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:50.371Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 59
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-b916450b92f753513aca",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 33,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Registration with EU country (Germany)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 104,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 349,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:90:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 90
                        },
                        "snippet": "\u001b[0m \u001b[90m 88 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 89 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 90 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 91 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 92 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 93 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[32m'pending_review'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 90
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  88 |     });\n  89 |\n> 90 |     expect(response.status()).toBe(201);\n     |                               ^\n  91 |     const body = await response.json();\n  92 |     expect(body.success).toBe(true);\n  93 |     expect(body.data.status).toBe('pending_review');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:90:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:51.481Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 90
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-d0ffbc042eacfecce71d",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 70,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Registration with Balkan country (Serbia)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 105,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 350,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:116:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 116
                        },
                        "snippet": "\u001b[0m \u001b[90m 114 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 115 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 116 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 117 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 118 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 119 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 116
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  114 |     });\n  115 |\n> 116 |     expect(response.status()).toBe(201);\n      |                               ^\n  117 |     const body = await response.json();\n  118 |     expect(body.success).toBe(true);\n  119 |   });\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:116:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:52.616Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 116
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-f89b93af9ae2266c0b34",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 96,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - French RPPS number validation (11 digits)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 106,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 348,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:141:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 141
                        },
                        "snippet": "\u001b[0m \u001b[90m 139 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 140 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 141 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 142 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 143 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 144 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 141
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  139 |     });\n  140 |\n> 141 |     expect(response.status()).toBe(201);\n      |                               ^\n  142 |     const body = await response.json();\n  143 |     expect(body.success).toBe(true);\n  144 |   });\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:141:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:53.727Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 141
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-3165c6126ec4c1156a79",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 121,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT missing required fields",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 107,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 358,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:160:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 160
                        },
                        "snippet": "\u001b[0m \u001b[90m 158 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 159 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 160 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 161 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 162 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Missing required fields'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 163 |\u001b[39m     expect(body\u001b[33m.\u001b[39mrequired)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mArray\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 160
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  158 |     });\n  159 |\n> 160 |     expect(response.status()).toBe(400);\n      |                               ^\n  161 |     const body = await response.json();\n  162 |     expect(body.error).toBe('Missing required fields');\n  163 |     expect(body.required).toBeInstanceOf(Array);\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:160:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:54.846Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 160
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-e0ab5fa6f9b2ad7d7536",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 150,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT invalid email format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 108,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 346,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:55.965Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-111824806cdd30516747",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 166,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT duplicate email",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 108,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 11,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:207:32",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 32,
                          "line": 207
                        },
                        "snippet": "\u001b[0m \u001b[90m 205 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 206 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 207 |\u001b[39m     expect(response1\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 208 |\u001b[39m\n \u001b[90m 209 |\u001b[39m     \u001b[90m// Second registration with same email\u001b[39m\n \u001b[90m 210 |\u001b[39m     \u001b[36mconst\u001b[39m payload2 \u001b[33m=\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 32,
                            "line": 207
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  205 |     });\n  206 |\n> 207 |     expect(response1.status()).toBe(201);\n      |                                ^\n  208 |\n  209 |     // Second registration with same email\n  210 |     const payload2 = {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:207:32"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:56.334Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 32,
                        "line": 207
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-ee95781a9b318280b3a7",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 186,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT duplicate license number",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 109,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 375,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:251:32",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 32,
                          "line": 251
                        },
                        "snippet": "\u001b[0m \u001b[90m 249 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 250 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 251 |\u001b[39m     expect(response1\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 252 |\u001b[39m\n \u001b[90m 253 |\u001b[39m     \u001b[90m// Second registration with same license number\u001b[39m\n \u001b[90m 254 |\u001b[39m     \u001b[36mconst\u001b[39m payload2 \u001b[33m=\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 32,
                            "line": 251
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  249 |     });\n  250 |\n> 251 |     expect(response1.status()).toBe(201);\n      |                                ^\n  252 |\n  253 |     // Second registration with same license number\n  254 |     const payload2 = {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:251:32"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:57.102Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 32,
                        "line": 251
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-69b0abc3381805ecb31a",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 230,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT ineligible country (USA)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 110,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 345,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:290:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 290
                        },
                        "snippet": "\u001b[0m \u001b[90m 288 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 289 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 290 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 291 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 292 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Country not eligible'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 293 |\u001b[39m     expect(body\u001b[33m.\u001b[39meligibleRegions)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mArray\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 290
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  288 |     });\n  289 |\n> 290 |     expect(response.status()).toBe(400);\n      |                               ^\n  291 |     const body = await response.json();\n  292 |     expect(body.error).toBe('Country not eligible');\n  293 |     expect(body.eligibleRegions).toBeInstanceOf(Array);\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:290:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:58.292Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 290
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-aee58d4977a5ea6592d9",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 274,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT invalid French RPPS (not 11 digits)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 111,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 348,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:312:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 312
                        },
                        "snippet": "\u001b[0m \u001b[90m 310 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 311 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 312 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 313 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 314 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Invalid license number'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 315 |\u001b[39m     expect(body\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoContain(\u001b[32m'11 digits'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 312
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  310 |     });\n  311 |\n> 312 |     expect(response.status()).toBe(400);\n      |                               ^\n  313 |     const body = await response.json();\n  314 |     expect(body.error).toBe('Invalid license number');\n  315 |     expect(body.message).toContain('11 digits');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:312:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:59.413Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 312
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-5ebd3e2af616179e04be",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 296,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT license number too short (<5 chars)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 112,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 345,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:334:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 334
                        },
                        "snippet": "\u001b[0m \u001b[90m 332 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 333 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 334 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 335 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 336 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Invalid license number'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 337 |\u001b[39m     expect(body\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoContain(\u001b[32m'at least 5 characters'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 334
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  332 |     });\n  333 |\n> 334 |     expect(response.status()).toBe(400);\n      |                               ^\n  335 |     const body = await response.json();\n  336 |     expect(body.error).toBe('Invalid license number');\n  337 |     expect(body.message).toContain('at least 5 characters');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:334:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:00.550Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 334
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-9291c35029a53c11cfc7",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 318,
              "column": 3
            },
            {
              "title": "[P0] Security - SQL Injection in email field",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 113,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 339,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:01.653Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-aea8118452fc59cf6f03",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 344,
              "column": 3
            },
            {
              "title": "[P0] Security - XSS in firstName field",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 113,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 10,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:02.015Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-9bb79c5dce37827a3ec7",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 366,
              "column": 3
            },
            {
              "title": "[P0] Security - Rate limiting - 4th attempt should fail",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 113,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 23,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "Rate limit attempts: [\n  { attempt: \u001b[33m1\u001b[39m, status: \u001b[33m429\u001b[39m },\n  { attempt: \u001b[33m2\u001b[39m, status: \u001b[33m429\u001b[39m },\n  { attempt: \u001b[33m3\u001b[39m, status: \u001b[33m429\u001b[39m },\n  { attempt: \u001b[33m4\u001b[39m, status: \u001b[33m429\u001b[39m }\n]\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:02.035Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-835cfa70da9ea0c94338",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 393,
              "column": 3
            },
            {
              "title": "[P0] Security - Email blacklist enforcement (hard rejection)",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 113,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 9,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "Note: Email not blacklisted, test skipped\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:02.069Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-18718542d99d21cefd04",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 424,
              "column": 3
            },
            {
              "title": "[P1] GET /api/doctor-registration/eligible-countries - Returns correct country list",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 113,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 19,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:02.089Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-75b0d8420772d1eac13e",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 458,
              "column": 3
            },
            {
              "title": "[P1] All EU countries are eligible",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 113,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 25,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:02.117Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-c0b4467d741b1666bf24",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 477,
              "column": 3
            },
            {
              "title": "[P1] All Balkan countries are eligible",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 113,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 10,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:02.150Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-c2230c185561a6b5dff1",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 492,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number exactly 5 characters (minimum)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 113,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 8,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:523:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 523
                        },
                        "snippet": "\u001b[0m \u001b[90m 521 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 522 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 523 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 524 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 525 |\u001b[39m\n \u001b[90m 526 |\u001b[39m   test(\u001b[32m'[P1] BVA - License number 4 characters (below minimum)'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 523
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  521 |     });\n  522 |\n> 523 |     expect(response.status()).toBe(201);\n      |                               ^\n  524 |   });\n  525 |\n  526 |   test('[P1] BVA - License number 4 characters (below minimum)', async ({ request }) => {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:523:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:02.170Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 523
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-2608c05b8ced0e088df7",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 507,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number 4 characters (below minimum)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 114,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 349,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:542:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 542
                        },
                        "snippet": "\u001b[0m \u001b[90m 540 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 541 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 542 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 543 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 544 |\u001b[39m\n \u001b[90m 545 |\u001b[39m   test(\u001b[32m'[P1] BVA - License number 100 characters (stress test)'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 542
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  540 |     });\n  541 |\n> 542 |     expect(response.status()).toBe(400);\n      |                               ^\n  543 |   });\n  544 |\n  545 |   test('[P1] BVA - License number 100 characters (stress test)', async ({ request }) => {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:542:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:02.912Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 542
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-2f912e2c2b7d042e6027",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 526,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number 100 characters (stress test)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 115,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 346,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:564:24",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 24,
                          "line": 564
                        },
                        "snippet": "\u001b[0m \u001b[90m 562 |\u001b[39m\n \u001b[90m 563 |\u001b[39m     \u001b[90m// Should either accept (if no max limit) or reject gracefully\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 564 |\u001b[39m     expect([\u001b[35m201\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 565 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 566 |\u001b[39m\n \u001b[90m 567 |\u001b[39m   \u001b[90m// ========================================\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 24,
                            "line": 564
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n\n  562 |\n  563 |     // Should either accept (if no max limit) or reject gracefully\n> 564 |     expect([201, 400]).toContain(response.status());\n      |                        ^\n  565 |   });\n  566 |\n  567 |   // ========================================\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:564:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:04.022Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 24,
                        "line": 564
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-997174d91eae56362a92",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 545,
              "column": 3
            },
            {
              "title": "[P2] Performance - Registration response time < 2 seconds",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 116,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 359,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:594:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 594
                        },
                        "snippet": "\u001b[0m \u001b[90m 592 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m`‚è±Ô∏è Registration response time: ${responseTime}ms`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 593 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 594 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 595 |\u001b[39m     expect(responseTime)\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m2000\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// 2 seconds\u001b[39m\n \u001b[90m 596 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 597 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 594
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  592 |     console.log(`‚è±Ô∏è Registration response time: ${responseTime}ms`);\n  593 |\n> 594 |     expect(response.status()).toBe(201);\n      |                               ^\n  595 |     expect(responseTime).toBeLessThan(2000); // 2 seconds\n  596 |   });\n  597 |\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:594:31"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "‚è±Ô∏è Registration response time: 341ms\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:05.168Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 594
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-d0660a9ee944bb218b15",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 571,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Empty string for optional bio",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 117,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 347,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:619:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 619
                        },
                        "snippet": "\u001b[0m \u001b[90m 617 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 618 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 619 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 620 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 621 |\u001b[39m\n \u001b[90m 622 |\u001b[39m   test(\u001b[32m'[P2] Edge case - Unicode characters in name'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 619
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  617 |     });\n  618 |\n> 619 |     expect(response.status()).toBe(201);\n      |                               ^\n  620 |   });\n  621 |\n  622 |   test('[P2] Edge case - Unicode characters in name', async ({ request }) => {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:619:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:06.281Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 619
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-05ae96434d28d5b46a6c",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 602,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Unicode characters in name",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 118,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 349,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:638:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 638
                        },
                        "snippet": "\u001b[0m \u001b[90m 636 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 637 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 638 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 639 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 640 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mfirstName)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Fran√ßois'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 641 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mlastName)\u001b[33m.\u001b[39mtoBe(\u001b[32m'M√ºller'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 638
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  636 |     });\n  637 |\n> 638 |     expect(response.status()).toBe(201);\n      |                               ^\n  639 |     const body = await response.json();\n  640 |     expect(body.data.firstName).toBe('Fran√ßois');\n  641 |     expect(body.data.lastName).toBe('M√ºller');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:638:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:07.399Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 638
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-894eabd17ae650dd97c2",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 622,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Very long bio (1000 characters)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 119,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 349,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:664:24",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 24,
                          "line": 664
                        },
                        "snippet": "\u001b[0m \u001b[90m 662 |\u001b[39m\n \u001b[90m 663 |\u001b[39m     \u001b[90m// Should either accept or reject gracefully\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 664 |\u001b[39m     expect([\u001b[35m201\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 665 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 666 |\u001b[39m\n \u001b[90m 667 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 24,
                            "line": 664
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n\n  662 |\n  663 |     // Should either accept or reject gracefully\n> 664 |     expect([201, 400]).toContain(response.status());\n      |                        ^\n  665 |   });\n  666 |\n  667 | });\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:664:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:08.503Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 24,
                        "line": 664
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-66cc12a09f7ac5ab035f",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 644,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Valid registration with all required fields",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 120,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 10,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:09.609Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-a0a757c2b42fdbb8155f",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 33,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Registration with EU country (Germany)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 121,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:10.391Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-6a905f1756c124ffe683",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 70,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Registration with Balkan country (Serbia)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 122,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:11.158Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-41288f06a1155761aea8",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 96,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - French RPPS number validation (11 digits)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 123,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:11.938Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-9b6fa4049bb23a36a25f",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 121,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT missing required fields",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 124,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:12.698Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-e970ee221c4edaedff74",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 150,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT invalid email format",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 125,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:13.496Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-45b31e1eaa85bd033573",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 166,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT duplicate email",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 126,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:14.268Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-0dac008628736e33e0b3",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 186,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT duplicate license number",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 127,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:15.047Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-82bdd94548692d9b885c",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 230,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT ineligible country (USA)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 128,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:15.811Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-21c7a05f01939a71cb8e",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 274,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT invalid French RPPS (not 11 digits)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 129,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:16.583Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-30f41806b07cfe83ac72",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 296,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT license number too short (<5 chars)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 130,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:17.319Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-be36dfcb73695f621aba",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 318,
              "column": 3
            },
            {
              "title": "[P0] Security - SQL Injection in email field",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 131,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:18.117Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-f303fee8889184ed2738",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 344,
              "column": 3
            },
            {
              "title": "[P0] Security - XSS in firstName field",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 132,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:18.906Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-b7c79d8ecb5671ef4fa0",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 366,
              "column": 3
            },
            {
              "title": "[P0] Security - Rate limiting - 4th attempt should fail",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 133,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:19.722Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-c0373304599df30805d0",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 393,
              "column": 3
            },
            {
              "title": "[P0] Security - Email blacklist enforcement (hard rejection)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 134,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:20.505Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-f8a9bc2be49d40c1c594",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 424,
              "column": 3
            },
            {
              "title": "[P1] GET /api/doctor-registration/eligible-countries - Returns correct country list",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 135,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:21.268Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-27177c92052fd683a75a",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 458,
              "column": 3
            },
            {
              "title": "[P1] All EU countries are eligible",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 136,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:22.062Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-840db1625c76e9435fa5",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 477,
              "column": 3
            },
            {
              "title": "[P1] All Balkan countries are eligible",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 137,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:22.839Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-b4474850378ca39fa0aa",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 492,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number exactly 5 characters (minimum)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 138,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:23.596Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-e0fa703d2e4e96757d6b",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 507,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number 4 characters (below minimum)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 139,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:24.357Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-c49eed0b010470011287",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 526,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number 100 characters (stress test)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 140,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:25.143Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-a8904d4b061356784d19",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 545,
              "column": 3
            },
            {
              "title": "[P2] Performance - Registration response time < 2 seconds",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 141,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 6,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:25.895Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-77372c6088ae69080b98",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 571,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Empty string for optional bio",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 142,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:26.688Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-b31002b6d302f646870d",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 602,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Unicode characters in name",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 143,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:27.487Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-936249793453110887ed",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 622,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Very long bio (1000 characters)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "doctor",
                  "projectName": "doctor",
                  "results": [
                    {
                      "workerIndex": 144,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'",
                        "stack": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: ENOENT: no such file or directory, open 'C:\\Users\\mings\\.apps\\DoktuTracker\\playwright\\.auth\\doctor.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:28.263Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-9cec34d895ec02c24f56",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 644,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Valid registration with all required fields",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 145,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 354,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:59:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 59
                        },
                        "snippet": "\u001b[0m \u001b[90m 57 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Response:'\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(body\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m;\u001b[39m\n \u001b[90m 58 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'userId'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'doctorId'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 59
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  57 |     console.log('Response:', JSON.stringify(body, null, 2));\n  58 |\n> 59 |     expect(response.status()).toBe(201);\n     |                               ^\n  60 |     expect(body.success).toBe(true);\n  61 |     expect(body.data).toHaveProperty('userId');\n  62 |     expect(body.data).toHaveProperty('doctorId');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:59:31"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "‚úÖ Test: Valid registration\n"
                        },
                        {
                          "text": "Status: \u001b[33m429\u001b[39m\n"
                        },
                        {
                          "text": "Response: {\n  \"error\": \"Too many registration attempts. Please try again later.\",\n  \"retryAfter\": 3600\n}\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:29.047Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 59
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-74e9dc8eead4732331f6",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 33,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Registration with EU country (Germany)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 146,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 345,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:90:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 90
                        },
                        "snippet": "\u001b[0m \u001b[90m 88 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 89 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 90 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 91 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 92 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 93 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[32m'pending_review'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 90
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  88 |     });\n  89 |\n> 90 |     expect(response.status()).toBe(201);\n     |                               ^\n  91 |     const body = await response.json();\n  92 |     expect(body.success).toBe(true);\n  93 |     expect(body.data.status).toBe('pending_review');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:90:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:30.166Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 90
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-3da5a9454dce098fe45f",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 70,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Registration with Balkan country (Serbia)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 147,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 342,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:116:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 116
                        },
                        "snippet": "\u001b[0m \u001b[90m 114 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 115 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 116 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 117 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 118 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 119 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 116
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  114 |     });\n  115 |\n> 116 |     expect(response.status()).toBe(201);\n      |                               ^\n  117 |     const body = await response.json();\n  118 |     expect(body.success).toBe(true);\n  119 |   });\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:116:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:31.310Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 116
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-5a1e5f5c89e2f619b7ef",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 96,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - French RPPS number validation (11 digits)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 148,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 345,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:141:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 141
                        },
                        "snippet": "\u001b[0m \u001b[90m 139 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 140 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 141 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 142 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 143 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 144 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 141
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  139 |     });\n  140 |\n> 141 |     expect(response.status()).toBe(201);\n      |                               ^\n  142 |     const body = await response.json();\n  143 |     expect(body.success).toBe(true);\n  144 |   });\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:141:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:32.420Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 141
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-4a7a86ffb46ecee15a0c",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 121,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT missing required fields",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 149,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 348,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:160:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 160
                        },
                        "snippet": "\u001b[0m \u001b[90m 158 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 159 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 160 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 161 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 162 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Missing required fields'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 163 |\u001b[39m     expect(body\u001b[33m.\u001b[39mrequired)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mArray\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 160
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  158 |     });\n  159 |\n> 160 |     expect(response.status()).toBe(400);\n      |                               ^\n  161 |     const body = await response.json();\n  162 |     expect(body.error).toBe('Missing required fields');\n  163 |     expect(body.required).toBeInstanceOf(Array);\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:160:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:33.531Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 160
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-d33f03513bf01ed9c90e",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 150,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT invalid email format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 150,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 349,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:34.711Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-8c0d7ec263fd39d4044b",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 166,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT duplicate email",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 150,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 11,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:207:32",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 32,
                          "line": 207
                        },
                        "snippet": "\u001b[0m \u001b[90m 205 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 206 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 207 |\u001b[39m     expect(response1\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 208 |\u001b[39m\n \u001b[90m 209 |\u001b[39m     \u001b[90m// Second registration with same email\u001b[39m\n \u001b[90m 210 |\u001b[39m     \u001b[36mconst\u001b[39m payload2 \u001b[33m=\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 32,
                            "line": 207
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  205 |     });\n  206 |\n> 207 |     expect(response1.status()).toBe(201);\n      |                                ^\n  208 |\n  209 |     // Second registration with same email\n  210 |     const payload2 = {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:207:32"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:35.083Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 32,
                        "line": 207
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-c7ae90270bb57381a15b",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 186,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT duplicate license number",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 151,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 346,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:251:32",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 32,
                          "line": 251
                        },
                        "snippet": "\u001b[0m \u001b[90m 249 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 250 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 251 |\u001b[39m     expect(response1\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 252 |\u001b[39m\n \u001b[90m 253 |\u001b[39m     \u001b[90m// Second registration with same license number\u001b[39m\n \u001b[90m 254 |\u001b[39m     \u001b[36mconst\u001b[39m payload2 \u001b[33m=\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 32,
                            "line": 251
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  249 |     });\n  250 |\n> 251 |     expect(response1.status()).toBe(201);\n      |                                ^\n  252 |\n  253 |     // Second registration with same license number\n  254 |     const payload2 = {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:251:32"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:35.850Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 32,
                        "line": 251
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-7626662ab13e3511ed82",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 230,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT ineligible country (USA)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 152,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 348,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:290:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 290
                        },
                        "snippet": "\u001b[0m \u001b[90m 288 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 289 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 290 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 291 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 292 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Country not eligible'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 293 |\u001b[39m     expect(body\u001b[33m.\u001b[39meligibleRegions)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mArray\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 290
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  288 |     });\n  289 |\n> 290 |     expect(response.status()).toBe(400);\n      |                               ^\n  291 |     const body = await response.json();\n  292 |     expect(body.error).toBe('Country not eligible');\n  293 |     expect(body.eligibleRegions).toBeInstanceOf(Array);\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:290:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:36.971Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 290
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-0657c2bbf617cc849b04",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 274,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT invalid French RPPS (not 11 digits)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 153,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 347,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:312:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 312
                        },
                        "snippet": "\u001b[0m \u001b[90m 310 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 311 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 312 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 313 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 314 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Invalid license number'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 315 |\u001b[39m     expect(body\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoContain(\u001b[32m'11 digits'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 312
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  310 |     });\n  311 |\n> 312 |     expect(response.status()).toBe(400);\n      |                               ^\n  313 |     const body = await response.json();\n  314 |     expect(body.error).toBe('Invalid license number');\n  315 |     expect(body.message).toContain('11 digits');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:312:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:38.078Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 312
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-3fff0ce090ae40e49b03",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 296,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT license number too short (<5 chars)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 154,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 346,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:334:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 334
                        },
                        "snippet": "\u001b[0m \u001b[90m 332 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 333 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 334 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 335 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 336 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Invalid license number'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 337 |\u001b[39m     expect(body\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoContain(\u001b[32m'at least 5 characters'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 334
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  332 |     });\n  333 |\n> 334 |     expect(response.status()).toBe(400);\n      |                               ^\n  335 |     const body = await response.json();\n  336 |     expect(body.error).toBe('Invalid license number');\n  337 |     expect(body.message).toContain('at least 5 characters');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:334:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:39.208Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 334
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-92cdacfe431c6f22e4cd",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 318,
              "column": 3
            },
            {
              "title": "[P0] Security - SQL Injection in email field",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 155,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 346,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:40.318Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-da71c4442504d3ca7279",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 344,
              "column": 3
            },
            {
              "title": "[P0] Security - XSS in firstName field",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 155,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 9,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:40.687Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-b666fcbf4b541b07aab4",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 366,
              "column": 3
            },
            {
              "title": "[P0] Security - Rate limiting - 4th attempt should fail",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 155,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 23,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "Rate limit attempts: [\n  { attempt: \u001b[33m1\u001b[39m, status: \u001b[33m429\u001b[39m },\n  { attempt: \u001b[33m2\u001b[39m, status: \u001b[33m429\u001b[39m },\n  { attempt: \u001b[33m3\u001b[39m, status: \u001b[33m429\u001b[39m },\n  { attempt: \u001b[33m4\u001b[39m, status: \u001b[33m429\u001b[39m }\n]\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:40.707Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-621112c453d6750b2191",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 393,
              "column": 3
            },
            {
              "title": "[P0] Security - Email blacklist enforcement (hard rejection)",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 155,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 9,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "Note: Email not blacklisted, test skipped\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:40.742Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-d4c9fe8f21e383ad3b6a",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 424,
              "column": 3
            },
            {
              "title": "[P1] GET /api/doctor-registration/eligible-countries - Returns correct country list",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 155,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 16,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:40.762Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-2cd972c77e64f9f4e5ca",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 458,
              "column": 3
            },
            {
              "title": "[P1] All EU countries are eligible",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 155,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 24,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:40.788Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-dce9af9248429dc9b594",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 477,
              "column": 3
            },
            {
              "title": "[P1] All Balkan countries are eligible",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 155,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 10,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:40.820Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-d1025373be87fdd589ff",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 492,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number exactly 5 characters (minimum)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 155,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 8,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:523:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 523
                        },
                        "snippet": "\u001b[0m \u001b[90m 521 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 522 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 523 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 524 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 525 |\u001b[39m\n \u001b[90m 526 |\u001b[39m   test(\u001b[32m'[P1] BVA - License number 4 characters (below minimum)'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 523
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  521 |     });\n  522 |\n> 523 |     expect(response.status()).toBe(201);\n      |                               ^\n  524 |   });\n  525 |\n  526 |   test('[P1] BVA - License number 4 characters (below minimum)', async ({ request }) => {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:523:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:40.838Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 523
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-5c4a61e3ea2151ad6ec4",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 507,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number 4 characters (below minimum)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 156,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 345,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:542:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 542
                        },
                        "snippet": "\u001b[0m \u001b[90m 540 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 541 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 542 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 543 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 544 |\u001b[39m\n \u001b[90m 545 |\u001b[39m   test(\u001b[32m'[P1] BVA - License number 100 characters (stress test)'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 542
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  540 |     });\n  541 |\n> 542 |     expect(response.status()).toBe(400);\n      |                               ^\n  543 |   });\n  544 |\n  545 |   test('[P1] BVA - License number 100 characters (stress test)', async ({ request }) => {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:542:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:41.602Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 542
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-ef3ab975349d04315bcf",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 526,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number 100 characters (stress test)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 157,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 359,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:564:24",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 24,
                          "line": 564
                        },
                        "snippet": "\u001b[0m \u001b[90m 562 |\u001b[39m\n \u001b[90m 563 |\u001b[39m     \u001b[90m// Should either accept (if no max limit) or reject gracefully\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 564 |\u001b[39m     expect([\u001b[35m201\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 565 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 566 |\u001b[39m\n \u001b[90m 567 |\u001b[39m   \u001b[90m// ========================================\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 24,
                            "line": 564
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n\n  562 |\n  563 |     // Should either accept (if no max limit) or reject gracefully\n> 564 |     expect([201, 400]).toContain(response.status());\n      |                        ^\n  565 |   });\n  566 |\n  567 |   // ========================================\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:564:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:42.714Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 24,
                        "line": 564
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-64a8f5d96efd482a7609",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 545,
              "column": 3
            },
            {
              "title": "[P2] Performance - Registration response time < 2 seconds",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 158,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 364,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:594:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 594
                        },
                        "snippet": "\u001b[0m \u001b[90m 592 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m`‚è±Ô∏è Registration response time: ${responseTime}ms`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 593 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 594 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 595 |\u001b[39m     expect(responseTime)\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m2000\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// 2 seconds\u001b[39m\n \u001b[90m 596 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 597 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 594
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  592 |     console.log(`‚è±Ô∏è Registration response time: ${responseTime}ms`);\n  593 |\n> 594 |     expect(response.status()).toBe(201);\n      |                               ^\n  595 |     expect(responseTime).toBeLessThan(2000); // 2 seconds\n  596 |   });\n  597 |\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:594:31"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "‚è±Ô∏è Registration response time: 346ms\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:43.837Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 594
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-858952b7fbd3d8aa4835",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 571,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Empty string for optional bio",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 159,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 347,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:619:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 619
                        },
                        "snippet": "\u001b[0m \u001b[90m 617 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 618 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 619 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 620 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 621 |\u001b[39m\n \u001b[90m 622 |\u001b[39m   test(\u001b[32m'[P2] Edge case - Unicode characters in name'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 619
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  617 |     });\n  618 |\n> 619 |     expect(response.status()).toBe(201);\n      |                               ^\n  620 |   });\n  621 |\n  622 |   test('[P2] Edge case - Unicode characters in name', async ({ request }) => {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:619:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:44.968Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 619
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-4ea48ae7e6e512392afc",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 602,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Unicode characters in name",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 160,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 350,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:638:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 638
                        },
                        "snippet": "\u001b[0m \u001b[90m 636 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 637 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 638 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 639 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 640 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mfirstName)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Fran√ßois'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 641 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mlastName)\u001b[33m.\u001b[39mtoBe(\u001b[32m'M√ºller'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 638
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  636 |     });\n  637 |\n> 638 |     expect(response.status()).toBe(201);\n      |                               ^\n  639 |     const body = await response.json();\n  640 |     expect(body.data.firstName).toBe('Fran√ßois');\n  641 |     expect(body.data.lastName).toBe('M√ºller');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:638:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:46.070Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 638
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-ec973296350cc54721c5",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 622,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Very long bio (1000 characters)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "patient",
                  "projectName": "patient",
                  "results": [
                    {
                      "workerIndex": 161,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 351,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:664:24",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 24,
                          "line": 664
                        },
                        "snippet": "\u001b[0m \u001b[90m 662 |\u001b[39m\n \u001b[90m 663 |\u001b[39m     \u001b[90m// Should either accept or reject gracefully\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 664 |\u001b[39m     expect([\u001b[35m201\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 665 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 666 |\u001b[39m\n \u001b[90m 667 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 24,
                            "line": 664
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n\n  662 |\n  663 |     // Should either accept or reject gracefully\n> 664 |     expect([201, 400]).toContain(response.status());\n      |                        ^\n  665 |   });\n  666 |\n  667 | });\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:664:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:26:47.228Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 24,
                        "line": 664
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-d8107bbb656d3408e2fa",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 644,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Valid registration with all required fields",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 1,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 376,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:59:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 59
                        },
                        "snippet": "\u001b[0m \u001b[90m 57 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Response:'\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(body\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m;\u001b[39m\n \u001b[90m 58 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'userId'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'doctorId'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 59
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  57 |     console.log('Response:', JSON.stringify(body, null, 2));\n  58 |\n> 59 |     expect(response.status()).toBe(201);\n     |                               ^\n  60 |     expect(body.success).toBe(true);\n  61 |     expect(body.data).toHaveProperty('userId');\n  62 |     expect(body.data).toHaveProperty('doctorId');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:59:31"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "‚úÖ Test: Valid registration\n"
                        },
                        {
                          "text": "Status: \u001b[33m400\u001b[39m\n"
                        },
                        {
                          "text": "Response: {\n  \"error\": \"Invalid license number\",\n  \"message\": \"French RPPS number must be 11 digits\"\n}\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:23:52.644Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 59
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-365e2f3b8cf4898ade18",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 33,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Registration with EU country (Germany)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1650,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:90:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 90
                        },
                        "snippet": "\u001b[0m \u001b[90m 88 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 89 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 90 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 91 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 92 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 93 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[32m'pending_review'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 90
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  88 |     });\n  89 |\n> 90 |     expect(response.status()).toBe(201);\n     |                               ^\n  91 |     const body = await response.json();\n  92 |     expect(body.success).toBe(true);\n  93 |     expect(body.data.status).toBe('pending_review');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:90:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:23:53.806Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 90
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-28e21223d8ae7e51793e",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 70,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Registration with Balkan country (Serbia)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 487,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:116:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 116
                        },
                        "snippet": "\u001b[0m \u001b[90m 114 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 115 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 116 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 117 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 118 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 119 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 116
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n  114 |     });\n  115 |\n> 116 |     expect(response.status()).toBe(201);\n      |                               ^\n  117 |     const body = await response.json();\n  118 |     expect(body.success).toBe(true);\n  119 |   });\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:116:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:23:56.212Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 116
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-7ae6a22ed3b67d4323c6",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 96,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - French RPPS number validation (11 digits)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 4,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 349,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:141:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 141
                        },
                        "snippet": "\u001b[0m \u001b[90m 139 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 140 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 141 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 142 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 143 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 144 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 141
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  139 |     });\n  140 |\n> 141 |     expect(response.status()).toBe(201);\n      |                               ^\n  142 |     const body = await response.json();\n  143 |     expect(body.success).toBe(true);\n  144 |   });\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:141:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:23:57.528Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 141
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-3c2a3956901eb6ad0f34",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 121,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT missing required fields",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 5,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 357,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:160:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 160
                        },
                        "snippet": "\u001b[0m \u001b[90m 158 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 159 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 160 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 161 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 162 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Missing required fields'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 163 |\u001b[39m     expect(body\u001b[33m.\u001b[39mrequired)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mArray\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 160
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  158 |     });\n  159 |\n> 160 |     expect(response.status()).toBe(400);\n      |                               ^\n  161 |     const body = await response.json();\n  162 |     expect(body.error).toBe('Missing required fields');\n  163 |     expect(body.required).toBeInstanceOf(Array);\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:160:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:23:58.633Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 160
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-092355f5c0413799ff2d",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 150,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT invalid email format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 6,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 342,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:23:59.777Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-a6dc26bd32fd082ef722",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 166,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT duplicate email",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 6,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 11,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:207:32",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 32,
                          "line": 207
                        },
                        "snippet": "\u001b[0m \u001b[90m 205 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 206 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 207 |\u001b[39m     expect(response1\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 208 |\u001b[39m\n \u001b[90m 209 |\u001b[39m     \u001b[90m// Second registration with same email\u001b[39m\n \u001b[90m 210 |\u001b[39m     \u001b[36mconst\u001b[39m payload2 \u001b[33m=\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 32,
                            "line": 207
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  205 |     });\n  206 |\n> 207 |     expect(response1.status()).toBe(201);\n      |                                ^\n  208 |\n  209 |     // Second registration with same email\n  210 |     const payload2 = {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:207:32"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:00.142Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 32,
                        "line": 207
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-7ccdd7c3e5eae83316fa",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 186,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT duplicate license number",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 7,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 341,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:251:32",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 32,
                          "line": 251
                        },
                        "snippet": "\u001b[0m \u001b[90m 249 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 250 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 251 |\u001b[39m     expect(response1\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 252 |\u001b[39m\n \u001b[90m 253 |\u001b[39m     \u001b[90m// Second registration with same license number\u001b[39m\n \u001b[90m 254 |\u001b[39m     \u001b[36mconst\u001b[39m payload2 \u001b[33m=\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 32,
                            "line": 251
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  249 |     });\n  250 |\n> 251 |     expect(response1.status()).toBe(201);\n      |                                ^\n  252 |\n  253 |     // Second registration with same license number\n  254 |     const payload2 = {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:251:32"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:00.955Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 32,
                        "line": 251
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-cd49ecf52579cd7da53f",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 230,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT ineligible country (USA)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 8,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 356,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:290:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 290
                        },
                        "snippet": "\u001b[0m \u001b[90m 288 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 289 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 290 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 291 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 292 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Country not eligible'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 293 |\u001b[39m     expect(body\u001b[33m.\u001b[39meligibleRegions)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mArray\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 290
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  288 |     });\n  289 |\n> 290 |     expect(response.status()).toBe(400);\n      |                               ^\n  291 |     const body = await response.json();\n  292 |     expect(body.error).toBe('Country not eligible');\n  293 |     expect(body.eligibleRegions).toBeInstanceOf(Array);\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:290:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:02.105Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 290
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-7aa4fa23b1c5c5bd599a",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 274,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT invalid French RPPS (not 11 digits)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 9,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 350,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:312:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 312
                        },
                        "snippet": "\u001b[0m \u001b[90m 310 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 311 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 312 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 313 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 314 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Invalid license number'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 315 |\u001b[39m     expect(body\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoContain(\u001b[32m'11 digits'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 312
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  310 |     });\n  311 |\n> 312 |     expect(response.status()).toBe(400);\n      |                               ^\n  313 |     const body = await response.json();\n  314 |     expect(body.error).toBe('Invalid license number');\n  315 |     expect(body.message).toContain('11 digits');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:312:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:03.257Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 312
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-1446375d80380fafe61f",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 296,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT license number too short (<5 chars)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 10,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 341,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:334:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 334
                        },
                        "snippet": "\u001b[0m \u001b[90m 332 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 333 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 334 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 335 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 336 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Invalid license number'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 337 |\u001b[39m     expect(body\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoContain(\u001b[32m'at least 5 characters'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 334
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  332 |     });\n  333 |\n> 334 |     expect(response.status()).toBe(400);\n      |                               ^\n  335 |     const body = await response.json();\n  336 |     expect(body.error).toBe('Invalid license number');\n  337 |     expect(body.message).toContain('at least 5 characters');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:334:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:04.384Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 334
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-6758e9e1c7545320b8f7",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 318,
              "column": 3
            },
            {
              "title": "[P0] Security - SQL Injection in email field",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 11,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 348,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:05.518Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-1046ecddd870c70e36b2",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 344,
              "column": 3
            },
            {
              "title": "[P0] Security - XSS in firstName field",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 11,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 9,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:05.889Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-3c832fb834e07b72b829",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 366,
              "column": 3
            },
            {
              "title": "[P0] Security - Rate limiting - 4th attempt should fail",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 11,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 22,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "Rate limit attempts: [\n  { attempt: \u001b[33m1\u001b[39m, status: \u001b[33m429\u001b[39m },\n  { attempt: \u001b[33m2\u001b[39m, status: \u001b[33m429\u001b[39m },\n  { attempt: \u001b[33m3\u001b[39m, status: \u001b[33m429\u001b[39m },\n  { attempt: \u001b[33m4\u001b[39m, status: \u001b[33m429\u001b[39m }\n]\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:05.909Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-ebf91185494fa551aec8",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 393,
              "column": 3
            },
            {
              "title": "[P0] Security - Email blacklist enforcement (hard rejection)",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 11,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 9,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "Note: Email not blacklisted, test skipped\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:05.942Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-c1825ec297e4fd94cf5b",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 424,
              "column": 3
            },
            {
              "title": "[P1] GET /api/doctor-registration/eligible-countries - Returns correct country list",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 11,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 16,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:05.963Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-8d9dba229c9dd2730b9c",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 458,
              "column": 3
            },
            {
              "title": "[P1] All EU countries are eligible",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 11,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 23,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:05.988Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-ac47454b3f292fbcc386",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 477,
              "column": 3
            },
            {
              "title": "[P1] All Balkan countries are eligible",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 11,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 9,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:06.019Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-a8cee2c140aac62b3398",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 492,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number exactly 5 characters (minimum)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 11,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 7,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:523:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 523
                        },
                        "snippet": "\u001b[0m \u001b[90m 521 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 522 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 523 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 524 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 525 |\u001b[39m\n \u001b[90m 526 |\u001b[39m   test(\u001b[32m'[P1] BVA - License number 4 characters (below minimum)'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 523
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  521 |     });\n  522 |\n> 523 |     expect(response.status()).toBe(201);\n      |                               ^\n  524 |   });\n  525 |\n  526 |   test('[P1] BVA - License number 4 characters (below minimum)', async ({ request }) => {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:523:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:06.036Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 523
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-53a6af59f1776d3066f5",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 507,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number 4 characters (below minimum)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 12,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 351,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:542:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 542
                        },
                        "snippet": "\u001b[0m \u001b[90m 540 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 541 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 542 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 543 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 544 |\u001b[39m\n \u001b[90m 545 |\u001b[39m   test(\u001b[32m'[P1] BVA - License number 100 characters (stress test)'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 542
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  540 |     });\n  541 |\n> 542 |     expect(response.status()).toBe(400);\n      |                               ^\n  543 |   });\n  544 |\n  545 |   test('[P1] BVA - License number 100 characters (stress test)', async ({ request }) => {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:542:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:06.810Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 542
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-aa8f5f965ba5ce4752b3",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 526,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number 100 characters (stress test)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 13,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 350,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:564:24",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 24,
                          "line": 564
                        },
                        "snippet": "\u001b[0m \u001b[90m 562 |\u001b[39m\n \u001b[90m 563 |\u001b[39m     \u001b[90m// Should either accept (if no max limit) or reject gracefully\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 564 |\u001b[39m     expect([\u001b[35m201\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 565 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 566 |\u001b[39m\n \u001b[90m 567 |\u001b[39m   \u001b[90m// ========================================\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 24,
                            "line": 564
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n\n  562 |\n  563 |     // Should either accept (if no max limit) or reject gracefully\n> 564 |     expect([201, 400]).toContain(response.status());\n      |                        ^\n  565 |   });\n  566 |\n  567 |   // ========================================\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:564:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:07.933Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 24,
                        "line": 564
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-079f45311b330fc168f0",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 545,
              "column": 3
            },
            {
              "title": "[P2] Performance - Registration response time < 2 seconds",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 14,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 345,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:594:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 594
                        },
                        "snippet": "\u001b[0m \u001b[90m 592 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m`‚è±Ô∏è Registration response time: ${responseTime}ms`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 593 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 594 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 595 |\u001b[39m     expect(responseTime)\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m2000\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// 2 seconds\u001b[39m\n \u001b[90m 596 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 597 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 594
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  592 |     console.log(`‚è±Ô∏è Registration response time: ${responseTime}ms`);\n  593 |\n> 594 |     expect(response.status()).toBe(201);\n      |                               ^\n  595 |     expect(responseTime).toBeLessThan(2000); // 2 seconds\n  596 |   });\n  597 |\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:594:31"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "‚è±Ô∏è Registration response time: 330ms\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:09.054Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 594
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-fd45e2d7606eee4bcae3",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 571,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Empty string for optional bio",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 15,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 353,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:619:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 619
                        },
                        "snippet": "\u001b[0m \u001b[90m 617 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 618 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 619 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 620 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 621 |\u001b[39m\n \u001b[90m 622 |\u001b[39m   test(\u001b[32m'[P2] Edge case - Unicode characters in name'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 619
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  617 |     });\n  618 |\n> 619 |     expect(response.status()).toBe(201);\n      |                               ^\n  620 |   });\n  621 |\n  622 |   test('[P2] Edge case - Unicode characters in name', async ({ request }) => {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:619:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:10.185Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 619
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-91f1a0d9ebfd4a78114f",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 602,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Unicode characters in name",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 16,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 349,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:638:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 638
                        },
                        "snippet": "\u001b[0m \u001b[90m 636 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 637 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 638 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 639 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 640 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mfirstName)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Fran√ßois'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 641 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mlastName)\u001b[33m.\u001b[39mtoBe(\u001b[32m'M√ºller'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 638
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  636 |     });\n  637 |\n> 638 |     expect(response.status()).toBe(201);\n      |                               ^\n  639 |     const body = await response.json();\n  640 |     expect(body.data.firstName).toBe('Fran√ßois');\n  641 |     expect(body.data.lastName).toBe('M√ºller');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:638:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:11.326Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 638
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-34f596ac38c29ba78491",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 622,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Very long bio (1000 characters)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 17,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 350,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:664:24",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 24,
                          "line": 664
                        },
                        "snippet": "\u001b[0m \u001b[90m 662 |\u001b[39m\n \u001b[90m 663 |\u001b[39m     \u001b[90m// Should either accept or reject gracefully\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 664 |\u001b[39m     expect([\u001b[35m201\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 665 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 666 |\u001b[39m\n \u001b[90m 667 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 24,
                            "line": 664
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n\n  662 |\n  663 |     // Should either accept or reject gracefully\n> 664 |     expect([201, 400]).toContain(response.status());\n      |                        ^\n  665 |   });\n  666 |\n  667 | });\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:664:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:12.488Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 24,
                        "line": 664
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-5a3af74d3482c83c7370",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 644,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Valid registration with all required fields",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 18,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 350,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:59:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 59
                        },
                        "snippet": "\u001b[0m \u001b[90m 57 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Response:'\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(body\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m;\u001b[39m\n \u001b[90m 58 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'userId'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'doctorId'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 59
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  57 |     console.log('Response:', JSON.stringify(body, null, 2));\n  58 |\n> 59 |     expect(response.status()).toBe(201);\n     |                               ^\n  60 |     expect(body.success).toBe(true);\n  61 |     expect(body.data).toHaveProperty('userId');\n  62 |     expect(body.data).toHaveProperty('doctorId');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:59:31"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "‚úÖ Test: Valid registration\n"
                        },
                        {
                          "text": "Status: \u001b[33m429\u001b[39m\n"
                        },
                        {
                          "text": "Response: {\n  \"error\": \"Too many registration attempts. Please try again later.\",\n  \"retryAfter\": 3600\n}\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:13.609Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 59
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-b8cfc427aa0d5a65c25f",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 33,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Registration with EU country (Germany)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 19,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 352,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:90:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 90
                        },
                        "snippet": "\u001b[0m \u001b[90m 88 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 89 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 90 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 91 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 92 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 93 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[32m'pending_review'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 90
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  88 |     });\n  89 |\n> 90 |     expect(response.status()).toBe(201);\n     |                               ^\n  91 |     const body = await response.json();\n  92 |     expect(body.success).toBe(true);\n  93 |     expect(body.data.status).toBe('pending_review');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:90:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:14.744Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 90
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-2605afc1d1b3e9750e0a",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 70,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Registration with Balkan country (Serbia)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 20,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 355,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:116:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 116
                        },
                        "snippet": "\u001b[0m \u001b[90m 114 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 115 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 116 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 117 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 118 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 119 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 116
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  114 |     });\n  115 |\n> 116 |     expect(response.status()).toBe(201);\n      |                               ^\n  117 |     const body = await response.json();\n  118 |     expect(body.success).toBe(true);\n  119 |   });\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:116:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:15.864Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 116
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-67c839b2873cb127a22a",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 96,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - French RPPS number validation (11 digits)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 21,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 345,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:141:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 141
                        },
                        "snippet": "\u001b[0m \u001b[90m 139 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 140 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 141 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 142 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 143 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 144 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 141
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  139 |     });\n  140 |\n> 141 |     expect(response.status()).toBe(201);\n      |                               ^\n  142 |     const body = await response.json();\n  143 |     expect(body.success).toBe(true);\n  144 |   });\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:141:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:17.039Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 141
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-9e74e4841519be1737cf",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 121,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT missing required fields",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 22,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 345,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:160:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 160
                        },
                        "snippet": "\u001b[0m \u001b[90m 158 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 159 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 160 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 161 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 162 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Missing required fields'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 163 |\u001b[39m     expect(body\u001b[33m.\u001b[39mrequired)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mArray\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 160
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  158 |     });\n  159 |\n> 160 |     expect(response.status()).toBe(400);\n      |                               ^\n  161 |     const body = await response.json();\n  162 |     expect(body.error).toBe('Missing required fields');\n  163 |     expect(body.required).toBeInstanceOf(Array);\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:160:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:18.158Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 160
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-21959ce4ac94be350c68",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 150,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT invalid email format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 23,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 346,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:19.293Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-99e5e1c6591c78970df1",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 166,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT duplicate email",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 23,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 11,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:207:32",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 32,
                          "line": 207
                        },
                        "snippet": "\u001b[0m \u001b[90m 205 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 206 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 207 |\u001b[39m     expect(response1\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 208 |\u001b[39m\n \u001b[90m 209 |\u001b[39m     \u001b[90m// Second registration with same email\u001b[39m\n \u001b[90m 210 |\u001b[39m     \u001b[36mconst\u001b[39m payload2 \u001b[33m=\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 32,
                            "line": 207
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  205 |     });\n  206 |\n> 207 |     expect(response1.status()).toBe(201);\n      |                                ^\n  208 |\n  209 |     // Second registration with same email\n  210 |     const payload2 = {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:207:32"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:19.662Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 32,
                        "line": 207
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-707f4f3a69f547b57614",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 186,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT duplicate license number",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 24,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 345,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:251:32",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 32,
                          "line": 251
                        },
                        "snippet": "\u001b[0m \u001b[90m 249 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 250 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 251 |\u001b[39m     expect(response1\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 252 |\u001b[39m\n \u001b[90m 253 |\u001b[39m     \u001b[90m// Second registration with same license number\u001b[39m\n \u001b[90m 254 |\u001b[39m     \u001b[36mconst\u001b[39m payload2 \u001b[33m=\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 32,
                            "line": 251
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  249 |     });\n  250 |\n> 251 |     expect(response1.status()).toBe(201);\n      |                                ^\n  252 |\n  253 |     // Second registration with same license number\n  254 |     const payload2 = {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:251:32"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:20.438Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 32,
                        "line": 251
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-cea00ad273c71700c3db",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 230,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT ineligible country (USA)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 25,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 350,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:290:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 290
                        },
                        "snippet": "\u001b[0m \u001b[90m 288 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 289 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 290 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 291 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 292 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Country not eligible'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 293 |\u001b[39m     expect(body\u001b[33m.\u001b[39meligibleRegions)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mArray\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 290
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  288 |     });\n  289 |\n> 290 |     expect(response.status()).toBe(400);\n      |                               ^\n  291 |     const body = await response.json();\n  292 |     expect(body.error).toBe('Country not eligible');\n  293 |     expect(body.eligibleRegions).toBeInstanceOf(Array);\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:290:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:21.524Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 290
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-5fccc4cee7e49322705a",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 274,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT invalid French RPPS (not 11 digits)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 26,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 345,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:312:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 312
                        },
                        "snippet": "\u001b[0m \u001b[90m 310 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 311 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 312 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 313 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 314 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Invalid license number'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 315 |\u001b[39m     expect(body\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoContain(\u001b[32m'11 digits'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 312
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  310 |     });\n  311 |\n> 312 |     expect(response.status()).toBe(400);\n      |                               ^\n  313 |     const body = await response.json();\n  314 |     expect(body.error).toBe('Invalid license number');\n  315 |     expect(body.message).toContain('11 digits');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:312:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:22.640Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 312
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-d730db6a8c6d58a2b41c",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 296,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT license number too short (<5 chars)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 27,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 341,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:334:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 334
                        },
                        "snippet": "\u001b[0m \u001b[90m 332 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 333 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 334 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 335 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 336 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Invalid license number'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 337 |\u001b[39m     expect(body\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoContain(\u001b[32m'at least 5 characters'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 334
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  332 |     });\n  333 |\n> 334 |     expect(response.status()).toBe(400);\n      |                               ^\n  335 |     const body = await response.json();\n  336 |     expect(body.error).toBe('Invalid license number');\n  337 |     expect(body.message).toContain('at least 5 characters');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:334:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:23.768Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 334
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-70d84ece5647fbc35a7b",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 318,
              "column": 3
            },
            {
              "title": "[P0] Security - SQL Injection in email field",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 28,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 342,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:24.909Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-395c3c9e7c034332bddb",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 344,
              "column": 3
            },
            {
              "title": "[P0] Security - XSS in firstName field",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 28,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 8,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:25.276Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-d17e968ae2073e3ab315",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 366,
              "column": 3
            },
            {
              "title": "[P0] Security - Rate limiting - 4th attempt should fail",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 28,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 22,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "Rate limit attempts: [\n  { attempt: \u001b[33m1\u001b[39m, status: \u001b[33m429\u001b[39m },\n  { attempt: \u001b[33m2\u001b[39m, status: \u001b[33m429\u001b[39m },\n  { attempt: \u001b[33m3\u001b[39m, status: \u001b[33m429\u001b[39m },\n  { attempt: \u001b[33m4\u001b[39m, status: \u001b[33m429\u001b[39m }\n]\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:25.294Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-0028566d5f6bbcf4d6d5",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 393,
              "column": 3
            },
            {
              "title": "[P0] Security - Email blacklist enforcement (hard rejection)",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 28,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 9,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "Note: Email not blacklisted, test skipped\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:25.328Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-41a775167eda7601088a",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 424,
              "column": 3
            },
            {
              "title": "[P1] GET /api/doctor-registration/eligible-countries - Returns correct country list",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 28,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 16,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:25.348Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-5028c3e1aa556bfee064",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 458,
              "column": 3
            },
            {
              "title": "[P1] All EU countries are eligible",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 28,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 23,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:25.373Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-5ad7665d6ec4db8170eb",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 477,
              "column": 3
            },
            {
              "title": "[P1] All Balkan countries are eligible",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 28,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 9,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:25.405Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-e3c0eaebff75f3524a2a",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 492,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number exactly 5 characters (minimum)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 28,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 8,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:523:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 523
                        },
                        "snippet": "\u001b[0m \u001b[90m 521 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 522 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 523 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 524 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 525 |\u001b[39m\n \u001b[90m 526 |\u001b[39m   test(\u001b[32m'[P1] BVA - License number 4 characters (below minimum)'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 523
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  521 |     });\n  522 |\n> 523 |     expect(response.status()).toBe(201);\n      |                               ^\n  524 |   });\n  525 |\n  526 |   test('[P1] BVA - License number 4 characters (below minimum)', async ({ request }) => {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:523:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:25.422Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 523
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-29f0622fc7069c228d41",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 507,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number 4 characters (below minimum)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 29,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 347,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:542:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 542
                        },
                        "snippet": "\u001b[0m \u001b[90m 540 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 541 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 542 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 543 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 544 |\u001b[39m\n \u001b[90m 545 |\u001b[39m   test(\u001b[32m'[P1] BVA - License number 100 characters (stress test)'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 542
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  540 |     });\n  541 |\n> 542 |     expect(response.status()).toBe(400);\n      |                               ^\n  543 |   });\n  544 |\n  545 |   test('[P1] BVA - License number 100 characters (stress test)', async ({ request }) => {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:542:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:26.197Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 542
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-3de2725ce9997311f871",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 526,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number 100 characters (stress test)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 30,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 349,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:564:24",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 24,
                          "line": 564
                        },
                        "snippet": "\u001b[0m \u001b[90m 562 |\u001b[39m\n \u001b[90m 563 |\u001b[39m     \u001b[90m// Should either accept (if no max limit) or reject gracefully\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 564 |\u001b[39m     expect([\u001b[35m201\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 565 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 566 |\u001b[39m\n \u001b[90m 567 |\u001b[39m   \u001b[90m// ========================================\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 24,
                            "line": 564
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n\n  562 |\n  563 |     // Should either accept (if no max limit) or reject gracefully\n> 564 |     expect([201, 400]).toContain(response.status());\n      |                        ^\n  565 |   });\n  566 |\n  567 |   // ========================================\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:564:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:27.305Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 24,
                        "line": 564
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-4324901f3ffe8daf73c2",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 545,
              "column": 3
            },
            {
              "title": "[P2] Performance - Registration response time < 2 seconds",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 31,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 346,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:594:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 594
                        },
                        "snippet": "\u001b[0m \u001b[90m 592 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m`‚è±Ô∏è Registration response time: ${responseTime}ms`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 593 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 594 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 595 |\u001b[39m     expect(responseTime)\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m2000\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// 2 seconds\u001b[39m\n \u001b[90m 596 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 597 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 594
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  592 |     console.log(`‚è±Ô∏è Registration response time: ${responseTime}ms`);\n  593 |\n> 594 |     expect(response.status()).toBe(201);\n      |                               ^\n  595 |     expect(responseTime).toBeLessThan(2000); // 2 seconds\n  596 |   });\n  597 |\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:594:31"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "‚è±Ô∏è Registration response time: 327ms\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:28.421Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 594
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-7b003fdb64fadfcd0666",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 571,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Empty string for optional bio",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 32,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 346,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:619:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 619
                        },
                        "snippet": "\u001b[0m \u001b[90m 617 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 618 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 619 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 620 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 621 |\u001b[39m\n \u001b[90m 622 |\u001b[39m   test(\u001b[32m'[P2] Edge case - Unicode characters in name'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 619
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  617 |     });\n  618 |\n> 619 |     expect(response.status()).toBe(201);\n      |                               ^\n  620 |   });\n  621 |\n  622 |   test('[P2] Edge case - Unicode characters in name', async ({ request }) => {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:619:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:29.613Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 619
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-0b91c351a1622d9ee94e",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 602,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Unicode characters in name",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 33,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 347,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:638:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 638
                        },
                        "snippet": "\u001b[0m \u001b[90m 636 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 637 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 638 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 639 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 640 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mfirstName)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Fran√ßois'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 641 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mlastName)\u001b[33m.\u001b[39mtoBe(\u001b[32m'M√ºller'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 638
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  636 |     });\n  637 |\n> 638 |     expect(response.status()).toBe(201);\n      |                               ^\n  639 |     const body = await response.json();\n  640 |     expect(body.data.firstName).toBe('Fran√ßois');\n  641 |     expect(body.data.lastName).toBe('M√ºller');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:638:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:30.716Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 638
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-972670a6009e65111170",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 622,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Very long bio (1000 characters)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 34,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 348,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:664:24",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 24,
                          "line": 664
                        },
                        "snippet": "\u001b[0m \u001b[90m 662 |\u001b[39m\n \u001b[90m 663 |\u001b[39m     \u001b[90m// Should either accept or reject gracefully\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 664 |\u001b[39m     expect([\u001b[35m201\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 665 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 666 |\u001b[39m\n \u001b[90m 667 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 24,
                            "line": 664
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n\n  662 |\n  663 |     // Should either accept or reject gracefully\n> 664 |     expect([201, 400]).toContain(response.status());\n      |                        ^\n  665 |   });\n  666 |\n  667 | });\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:664:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:31.826Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 24,
                        "line": 664
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-20760e9a5968a421cdc5",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 644,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Valid registration with all required fields",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 35,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 352,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:59:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 59
                        },
                        "snippet": "\u001b[0m \u001b[90m 57 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Response:'\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(body\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m;\u001b[39m\n \u001b[90m 58 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'userId'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'doctorId'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 59
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  57 |     console.log('Response:', JSON.stringify(body, null, 2));\n  58 |\n> 59 |     expect(response.status()).toBe(201);\n     |                               ^\n  60 |     expect(body.success).toBe(true);\n  61 |     expect(body.data).toHaveProperty('userId');\n  62 |     expect(body.data).toHaveProperty('doctorId');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:59:31"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "‚úÖ Test: Valid registration\n"
                        },
                        {
                          "text": "Status: \u001b[33m429\u001b[39m\n"
                        },
                        {
                          "text": "Response: {\n  \"error\": \"Too many registration attempts. Please try again later.\",\n  \"retryAfter\": 3600\n}\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:32.941Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 59
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-47cafd9f9889c45a5120",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 33,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Registration with EU country (Germany)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 36,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 345,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:90:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 90
                        },
                        "snippet": "\u001b[0m \u001b[90m 88 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 89 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 90 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 91 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 92 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 93 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[32m'pending_review'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 90
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  88 |     });\n  89 |\n> 90 |     expect(response.status()).toBe(201);\n     |                               ^\n  91 |     const body = await response.json();\n  92 |     expect(body.success).toBe(true);\n  93 |     expect(body.data.status).toBe('pending_review');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:90:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:34.048Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 90
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-d90f2b4ab640706d907f",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 70,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Registration with Balkan country (Serbia)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 37,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 347,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:116:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 116
                        },
                        "snippet": "\u001b[0m \u001b[90m 114 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 115 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 116 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 117 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 118 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 119 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 116
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  114 |     });\n  115 |\n> 116 |     expect(response.status()).toBe(201);\n      |                               ^\n  117 |     const body = await response.json();\n  118 |     expect(body.success).toBe(true);\n  119 |   });\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:116:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:35.167Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 116
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-2cca2e60e5801ee0af34",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 96,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - French RPPS number validation (11 digits)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 38,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 350,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:141:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 141
                        },
                        "snippet": "\u001b[0m \u001b[90m 139 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 140 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 141 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 142 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 143 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 144 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 141
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  139 |     });\n  140 |\n> 141 |     expect(response.status()).toBe(201);\n      |                               ^\n  142 |     const body = await response.json();\n  143 |     expect(body.success).toBe(true);\n  144 |   });\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:141:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:36.281Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 141
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-359fdb0d480a85baed50",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 121,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT missing required fields",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 39,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 349,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:160:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 160
                        },
                        "snippet": "\u001b[0m \u001b[90m 158 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 159 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 160 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 161 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 162 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Missing required fields'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 163 |\u001b[39m     expect(body\u001b[33m.\u001b[39mrequired)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mArray\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 160
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  158 |     });\n  159 |\n> 160 |     expect(response.status()).toBe(400);\n      |                               ^\n  161 |     const body = await response.json();\n  162 |     expect(body.error).toBe('Missing required fields');\n  163 |     expect(body.required).toBeInstanceOf(Array);\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:160:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:37.434Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 160
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-f6a57b2cf140512de7e7",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 150,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT invalid email format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 40,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 352,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:38.555Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-ee39a3d8a7d34a7f4d89",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 166,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT duplicate email",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 40,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 10,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:207:32",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 32,
                          "line": 207
                        },
                        "snippet": "\u001b[0m \u001b[90m 205 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 206 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 207 |\u001b[39m     expect(response1\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 208 |\u001b[39m\n \u001b[90m 209 |\u001b[39m     \u001b[90m// Second registration with same email\u001b[39m\n \u001b[90m 210 |\u001b[39m     \u001b[36mconst\u001b[39m payload2 \u001b[33m=\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 32,
                            "line": 207
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  205 |     });\n  206 |\n> 207 |     expect(response1.status()).toBe(201);\n      |                                ^\n  208 |\n  209 |     // Second registration with same email\n  210 |     const payload2 = {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:207:32"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:38.930Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 32,
                        "line": 207
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-27b3faf36edf1a0d2eee",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 186,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT duplicate license number",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 41,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 341,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:251:32",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 32,
                          "line": 251
                        },
                        "snippet": "\u001b[0m \u001b[90m 249 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 250 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 251 |\u001b[39m     expect(response1\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 252 |\u001b[39m\n \u001b[90m 253 |\u001b[39m     \u001b[90m// Second registration with same license number\u001b[39m\n \u001b[90m 254 |\u001b[39m     \u001b[36mconst\u001b[39m payload2 \u001b[33m=\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 32,
                            "line": 251
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  249 |     });\n  250 |\n> 251 |     expect(response1.status()).toBe(201);\n      |                                ^\n  252 |\n  253 |     // Second registration with same license number\n  254 |     const payload2 = {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:251:32"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:39.678Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 32,
                        "line": 251
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-e635f1b6f1d249add68b",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 230,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT ineligible country (USA)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 42,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 349,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:290:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 290
                        },
                        "snippet": "\u001b[0m \u001b[90m 288 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 289 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 290 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 291 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 292 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Country not eligible'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 293 |\u001b[39m     expect(body\u001b[33m.\u001b[39meligibleRegions)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mArray\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 290
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  288 |     });\n  289 |\n> 290 |     expect(response.status()).toBe(400);\n      |                               ^\n  291 |     const body = await response.json();\n  292 |     expect(body.error).toBe('Country not eligible');\n  293 |     expect(body.eligibleRegions).toBeInstanceOf(Array);\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:290:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:40.767Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 290
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-f90e7dae0ee626a03ab4",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 274,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT invalid French RPPS (not 11 digits)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 43,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 353,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:312:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 312
                        },
                        "snippet": "\u001b[0m \u001b[90m 310 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 311 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 312 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 313 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 314 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Invalid license number'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 315 |\u001b[39m     expect(body\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoContain(\u001b[32m'11 digits'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 312
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  310 |     });\n  311 |\n> 312 |     expect(response.status()).toBe(400);\n      |                               ^\n  313 |     const body = await response.json();\n  314 |     expect(body.error).toBe('Invalid license number');\n  315 |     expect(body.message).toContain('11 digits');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:312:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:41.914Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 312
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-86d0088bbe16c435798e",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 296,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT license number too short (<5 chars)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 44,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 350,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:334:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 334
                        },
                        "snippet": "\u001b[0m \u001b[90m 332 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 333 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 334 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 335 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 336 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Invalid license number'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 337 |\u001b[39m     expect(body\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoContain(\u001b[32m'at least 5 characters'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 334
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  332 |     });\n  333 |\n> 334 |     expect(response.status()).toBe(400);\n      |                               ^\n  335 |     const body = await response.json();\n  336 |     expect(body.error).toBe('Invalid license number');\n  337 |     expect(body.message).toContain('at least 5 characters');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:334:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:43.061Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 334
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-69654cb6b1603f1e6df1",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 318,
              "column": 3
            },
            {
              "title": "[P0] Security - SQL Injection in email field",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 45,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 347,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:44.177Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-faa5e1ba2bb85e9f8c93",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 344,
              "column": 3
            },
            {
              "title": "[P0] Security - XSS in firstName field",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 45,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 8,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:44.545Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-62acee333c9c0c28e7aa",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 366,
              "column": 3
            },
            {
              "title": "[P0] Security - Rate limiting - 4th attempt should fail",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 45,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 28,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "Rate limit attempts: [\n  { attempt: \u001b[33m1\u001b[39m, status: \u001b[33m429\u001b[39m },\n  { attempt: \u001b[33m2\u001b[39m, status: \u001b[33m429\u001b[39m },\n  { attempt: \u001b[33m3\u001b[39m, status: \u001b[33m429\u001b[39m },\n  { attempt: \u001b[33m4\u001b[39m, status: \u001b[33m429\u001b[39m }\n]\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:44.564Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-f3d9f6fc1b98d5d913cd",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 393,
              "column": 3
            },
            {
              "title": "[P0] Security - Email blacklist enforcement (hard rejection)",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 45,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 9,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "Note: Email not blacklisted, test skipped\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:44.604Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-b5bddbcb41a49578c592",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 424,
              "column": 3
            },
            {
              "title": "[P1] GET /api/doctor-registration/eligible-countries - Returns correct country list",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 45,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 17,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:44.625Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-df8b275d85e324e740fd",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 458,
              "column": 3
            },
            {
              "title": "[P1] All EU countries are eligible",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 45,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 21,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:44.651Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-79b852de7411d71cc7e6",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 477,
              "column": 3
            },
            {
              "title": "[P1] All Balkan countries are eligible",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 45,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 9,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:44.681Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-a72fa57bf25e839527ca",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 492,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number exactly 5 characters (minimum)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 45,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 7,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:523:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 523
                        },
                        "snippet": "\u001b[0m \u001b[90m 521 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 522 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 523 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 524 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 525 |\u001b[39m\n \u001b[90m 526 |\u001b[39m   test(\u001b[32m'[P1] BVA - License number 4 characters (below minimum)'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 523
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  521 |     });\n  522 |\n> 523 |     expect(response.status()).toBe(201);\n      |                               ^\n  524 |   });\n  525 |\n  526 |   test('[P1] BVA - License number 4 characters (below minimum)', async ({ request }) => {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:523:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:44.699Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 523
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-ccbcf31d24b0557ab1ee",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 507,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number 4 characters (below minimum)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 46,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 347,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:542:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 542
                        },
                        "snippet": "\u001b[0m \u001b[90m 540 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 541 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 542 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 543 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 544 |\u001b[39m\n \u001b[90m 545 |\u001b[39m   test(\u001b[32m'[P1] BVA - License number 100 characters (stress test)'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 542
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  540 |     });\n  541 |\n> 542 |     expect(response.status()).toBe(400);\n      |                               ^\n  543 |   });\n  544 |\n  545 |   test('[P1] BVA - License number 100 characters (stress test)', async ({ request }) => {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:542:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:45.447Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 542
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-8778a540d354fa97ca30",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 526,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number 100 characters (stress test)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 47,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 349,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:564:24",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 24,
                          "line": 564
                        },
                        "snippet": "\u001b[0m \u001b[90m 562 |\u001b[39m\n \u001b[90m 563 |\u001b[39m     \u001b[90m// Should either accept (if no max limit) or reject gracefully\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 564 |\u001b[39m     expect([\u001b[35m201\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 565 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 566 |\u001b[39m\n \u001b[90m 567 |\u001b[39m   \u001b[90m// ========================================\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 24,
                            "line": 564
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n\n  562 |\n  563 |     // Should either accept (if no max limit) or reject gracefully\n> 564 |     expect([201, 400]).toContain(response.status());\n      |                        ^\n  565 |   });\n  566 |\n  567 |   // ========================================\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:564:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:46.550Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 24,
                        "line": 564
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-b01f8d1a4ee1a0ea5944",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 545,
              "column": 3
            },
            {
              "title": "[P2] Performance - Registration response time < 2 seconds",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 48,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 354,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:594:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 594
                        },
                        "snippet": "\u001b[0m \u001b[90m 592 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m`‚è±Ô∏è Registration response time: ${responseTime}ms`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 593 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 594 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 595 |\u001b[39m     expect(responseTime)\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m2000\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// 2 seconds\u001b[39m\n \u001b[90m 596 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 597 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 594
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  592 |     console.log(`‚è±Ô∏è Registration response time: ${responseTime}ms`);\n  593 |\n> 594 |     expect(response.status()).toBe(201);\n      |                               ^\n  595 |     expect(responseTime).toBeLessThan(2000); // 2 seconds\n  596 |   });\n  597 |\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:594:31"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "‚è±Ô∏è Registration response time: 336ms\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:47.685Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 594
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-09f010c2820e5fb3e0d3",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 571,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Empty string for optional bio",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 49,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 349,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:619:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 619
                        },
                        "snippet": "\u001b[0m \u001b[90m 617 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 618 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 619 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 620 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 621 |\u001b[39m\n \u001b[90m 622 |\u001b[39m   test(\u001b[32m'[P2] Edge case - Unicode characters in name'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 619
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  617 |     });\n  618 |\n> 619 |     expect(response.status()).toBe(201);\n      |                               ^\n  620 |   });\n  621 |\n  622 |   test('[P2] Edge case - Unicode characters in name', async ({ request }) => {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:619:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:48.821Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 619
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-229805cb58b70e25b440",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 602,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Unicode characters in name",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 50,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 353,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:638:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 638
                        },
                        "snippet": "\u001b[0m \u001b[90m 636 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 637 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 638 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 639 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 640 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mfirstName)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Fran√ßois'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 641 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mlastName)\u001b[33m.\u001b[39mtoBe(\u001b[32m'M√ºller'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 638
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  636 |     });\n  637 |\n> 638 |     expect(response.status()).toBe(201);\n      |                               ^\n  639 |     const body = await response.json();\n  640 |     expect(body.data.firstName).toBe('Fran√ßois');\n  641 |     expect(body.data.lastName).toBe('M√ºller');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:638:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:49.941Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 638
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-eda3203cf623f9a90254",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 622,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Very long bio (1000 characters)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 51,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 348,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:664:24",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 24,
                          "line": 664
                        },
                        "snippet": "\u001b[0m \u001b[90m 662 |\u001b[39m\n \u001b[90m 663 |\u001b[39m     \u001b[90m// Should either accept or reject gracefully\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 664 |\u001b[39m     expect([\u001b[35m201\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 665 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 666 |\u001b[39m\n \u001b[90m 667 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 24,
                            "line": 664
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n\n  662 |\n  663 |     // Should either accept or reject gracefully\n> 664 |     expect([201, 400]).toContain(response.status());\n      |                        ^\n  665 |   });\n  666 |\n  667 | });\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:664:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:51.089Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 24,
                        "line": 664
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-c3464dbbfc8f6feb9448",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 644,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Valid registration with all required fields",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 52,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 350,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:59:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 59
                        },
                        "snippet": "\u001b[0m \u001b[90m 57 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Response:'\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(body\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m;\u001b[39m\n \u001b[90m 58 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'userId'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'doctorId'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 59
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  57 |     console.log('Response:', JSON.stringify(body, null, 2));\n  58 |\n> 59 |     expect(response.status()).toBe(201);\n     |                               ^\n  60 |     expect(body.success).toBe(true);\n  61 |     expect(body.data).toHaveProperty('userId');\n  62 |     expect(body.data).toHaveProperty('doctorId');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:59:31"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "‚úÖ Test: Valid registration\n"
                        },
                        {
                          "text": "Status: \u001b[33m429\u001b[39m\n"
                        },
                        {
                          "text": "Response: {\n  \"error\": \"Too many registration attempts. Please try again later.\",\n  \"retryAfter\": 3600\n}\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:52.242Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 59
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-d91659a8fe4d37b029a8",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 33,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Registration with EU country (Germany)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 53,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 359,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:90:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 90
                        },
                        "snippet": "\u001b[0m \u001b[90m 88 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 89 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 90 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 91 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 92 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 93 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[32m'pending_review'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 90
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  88 |     });\n  89 |\n> 90 |     expect(response.status()).toBe(201);\n     |                               ^\n  91 |     const body = await response.json();\n  92 |     expect(body.success).toBe(true);\n  93 |     expect(body.data.status).toBe('pending_review');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:90:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:53.372Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 90
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-0552b906f1f69c65db89",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 70,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Registration with Balkan country (Serbia)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 54,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 354,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:116:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 116
                        },
                        "snippet": "\u001b[0m \u001b[90m 114 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 115 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 116 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 117 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 118 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 119 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 116
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  114 |     });\n  115 |\n> 116 |     expect(response.status()).toBe(201);\n      |                               ^\n  117 |     const body = await response.json();\n  118 |     expect(body.success).toBe(true);\n  119 |   });\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:116:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:54.536Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 116
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-ffbeda58d71f0d4ea356",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 96,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - French RPPS number validation (11 digits)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 55,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 344,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:141:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 141
                        },
                        "snippet": "\u001b[0m \u001b[90m 139 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 140 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 141 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 142 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 143 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 144 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 141
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  139 |     });\n  140 |\n> 141 |     expect(response.status()).toBe(201);\n      |                               ^\n  142 |     const body = await response.json();\n  143 |     expect(body.success).toBe(true);\n  144 |   });\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:141:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:55.658Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 141
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-458787afcf6ffcb0b1c2",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 121,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT missing required fields",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 56,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 350,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:160:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 160
                        },
                        "snippet": "\u001b[0m \u001b[90m 158 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 159 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 160 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 161 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 162 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Missing required fields'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 163 |\u001b[39m     expect(body\u001b[33m.\u001b[39mrequired)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mArray\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 160
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  158 |     });\n  159 |\n> 160 |     expect(response.status()).toBe(400);\n      |                               ^\n  161 |     const body = await response.json();\n  162 |     expect(body.error).toBe('Missing required fields');\n  163 |     expect(body.required).toBeInstanceOf(Array);\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:160:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:56.757Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 160
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-d8fcf5a149cf615f68a1",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 150,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT invalid email format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 57,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 344,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:57.893Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-958a8500cd7a09e5c472",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 166,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT duplicate email",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 57,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 11,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:207:32",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 32,
                          "line": 207
                        },
                        "snippet": "\u001b[0m \u001b[90m 205 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 206 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 207 |\u001b[39m     expect(response1\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 208 |\u001b[39m\n \u001b[90m 209 |\u001b[39m     \u001b[90m// Second registration with same email\u001b[39m\n \u001b[90m 210 |\u001b[39m     \u001b[36mconst\u001b[39m payload2 \u001b[33m=\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 32,
                            "line": 207
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  205 |     });\n  206 |\n> 207 |     expect(response1.status()).toBe(201);\n      |                                ^\n  208 |\n  209 |     // Second registration with same email\n  210 |     const payload2 = {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:207:32"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:58.261Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 32,
                        "line": 207
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-25efc66aebf44ec37f36",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 186,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT duplicate license number",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 58,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 349,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:251:32",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 32,
                          "line": 251
                        },
                        "snippet": "\u001b[0m \u001b[90m 249 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 250 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 251 |\u001b[39m     expect(response1\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 252 |\u001b[39m\n \u001b[90m 253 |\u001b[39m     \u001b[90m// Second registration with same license number\u001b[39m\n \u001b[90m 254 |\u001b[39m     \u001b[36mconst\u001b[39m payload2 \u001b[33m=\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 32,
                            "line": 251
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  249 |     });\n  250 |\n> 251 |     expect(response1.status()).toBe(201);\n      |                                ^\n  252 |\n  253 |     // Second registration with same license number\n  254 |     const payload2 = {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:251:32"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:24:59.032Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 32,
                        "line": 251
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-d1fcdb190d7b83e6a335",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 230,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT ineligible country (USA)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 59,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 340,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:290:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 290
                        },
                        "snippet": "\u001b[0m \u001b[90m 288 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 289 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 290 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 291 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 292 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Country not eligible'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 293 |\u001b[39m     expect(body\u001b[33m.\u001b[39meligibleRegions)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mArray\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 290
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  288 |     });\n  289 |\n> 290 |     expect(response.status()).toBe(400);\n      |                               ^\n  291 |     const body = await response.json();\n  292 |     expect(body.error).toBe('Country not eligible');\n  293 |     expect(body.eligibleRegions).toBeInstanceOf(Array);\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:290:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:00.186Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 290
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-f3568638e61c21dfca44",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 274,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT invalid French RPPS (not 11 digits)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 60,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 360,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:312:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 312
                        },
                        "snippet": "\u001b[0m \u001b[90m 310 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 311 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 312 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 313 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 314 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Invalid license number'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 315 |\u001b[39m     expect(body\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoContain(\u001b[32m'11 digits'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 312
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  310 |     });\n  311 |\n> 312 |     expect(response.status()).toBe(400);\n      |                               ^\n  313 |     const body = await response.json();\n  314 |     expect(body.error).toBe('Invalid license number');\n  315 |     expect(body.message).toContain('11 digits');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:312:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:01.300Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 312
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-b91b0405d3126c63502c",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 296,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT license number too short (<5 chars)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 61,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 347,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:334:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 334
                        },
                        "snippet": "\u001b[0m \u001b[90m 332 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 333 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 334 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 335 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 336 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Invalid license number'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 337 |\u001b[39m     expect(body\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoContain(\u001b[32m'at least 5 characters'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 334
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  332 |     });\n  333 |\n> 334 |     expect(response.status()).toBe(400);\n      |                               ^\n  335 |     const body = await response.json();\n  336 |     expect(body.error).toBe('Invalid license number');\n  337 |     expect(body.message).toContain('at least 5 characters');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:334:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:02.429Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 334
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-08ade4beadea5a388d73",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 318,
              "column": 3
            },
            {
              "title": "[P0] Security - SQL Injection in email field",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 62,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 344,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:03.578Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-82d477a13966c0566301",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 344,
              "column": 3
            },
            {
              "title": "[P0] Security - XSS in firstName field",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 62,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 8,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:03.946Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-f3735b3d668198532b05",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 366,
              "column": 3
            },
            {
              "title": "[P0] Security - Rate limiting - 4th attempt should fail",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 62,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 21,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "Rate limit attempts: [\n  { attempt: \u001b[33m1\u001b[39m, status: \u001b[33m429\u001b[39m },\n  { attempt: \u001b[33m2\u001b[39m, status: \u001b[33m429\u001b[39m },\n  { attempt: \u001b[33m3\u001b[39m, status: \u001b[33m429\u001b[39m },\n  { attempt: \u001b[33m4\u001b[39m, status: \u001b[33m429\u001b[39m }\n]\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:03.965Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-7d365b74a634c74201ca",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 393,
              "column": 3
            },
            {
              "title": "[P0] Security - Email blacklist enforcement (hard rejection)",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 62,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 9,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "Note: Email not blacklisted, test skipped\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:03.996Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-443f4fd13e599db38c8e",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 424,
              "column": 3
            },
            {
              "title": "[P1] GET /api/doctor-registration/eligible-countries - Returns correct country list",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 62,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 17,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:04.016Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-1a2a3a79b5666752a992",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 458,
              "column": 3
            },
            {
              "title": "[P1] All EU countries are eligible",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 62,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 22,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:04.042Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-40cc0926cc5a791ea4a6",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 477,
              "column": 3
            },
            {
              "title": "[P1] All Balkan countries are eligible",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 62,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 9,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:04.073Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-8a9ae6f3e1c40a9057ac",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 492,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number exactly 5 characters (minimum)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 62,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 7,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:523:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 523
                        },
                        "snippet": "\u001b[0m \u001b[90m 521 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 522 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 523 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 524 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 525 |\u001b[39m\n \u001b[90m 526 |\u001b[39m   test(\u001b[32m'[P1] BVA - License number 4 characters (below minimum)'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 523
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  521 |     });\n  522 |\n> 523 |     expect(response.status()).toBe(201);\n      |                               ^\n  524 |   });\n  525 |\n  526 |   test('[P1] BVA - License number 4 characters (below minimum)', async ({ request }) => {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:523:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:04.090Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 523
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-8bc7e72e129302954b8e",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 507,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number 4 characters (below minimum)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 63,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 348,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:542:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 542
                        },
                        "snippet": "\u001b[0m \u001b[90m 540 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 541 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 542 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 543 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 544 |\u001b[39m\n \u001b[90m 545 |\u001b[39m   test(\u001b[32m'[P1] BVA - License number 100 characters (stress test)'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 542
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  540 |     });\n  541 |\n> 542 |     expect(response.status()).toBe(400);\n      |                               ^\n  543 |   });\n  544 |\n  545 |   test('[P1] BVA - License number 100 characters (stress test)', async ({ request }) => {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:542:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:04.869Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 542
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-4ca9c65fa610b7138b5a",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 526,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number 100 characters (stress test)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 64,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 353,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:564:24",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 24,
                          "line": 564
                        },
                        "snippet": "\u001b[0m \u001b[90m 562 |\u001b[39m\n \u001b[90m 563 |\u001b[39m     \u001b[90m// Should either accept (if no max limit) or reject gracefully\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 564 |\u001b[39m     expect([\u001b[35m201\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 565 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 566 |\u001b[39m\n \u001b[90m 567 |\u001b[39m   \u001b[90m// ========================================\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 24,
                            "line": 564
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n\n  562 |\n  563 |     // Should either accept (if no max limit) or reject gracefully\n> 564 |     expect([201, 400]).toContain(response.status());\n      |                        ^\n  565 |   });\n  566 |\n  567 |   // ========================================\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:564:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:05.984Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 24,
                        "line": 564
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-a72c86b4faf537685345",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 545,
              "column": 3
            },
            {
              "title": "[P2] Performance - Registration response time < 2 seconds",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 65,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 347,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:594:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 594
                        },
                        "snippet": "\u001b[0m \u001b[90m 592 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m`‚è±Ô∏è Registration response time: ${responseTime}ms`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 593 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 594 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 595 |\u001b[39m     expect(responseTime)\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m2000\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// 2 seconds\u001b[39m\n \u001b[90m 596 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 597 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 594
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  592 |     console.log(`‚è±Ô∏è Registration response time: ${responseTime}ms`);\n  593 |\n> 594 |     expect(response.status()).toBe(201);\n      |                               ^\n  595 |     expect(responseTime).toBeLessThan(2000); // 2 seconds\n  596 |   });\n  597 |\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:594:31"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "‚è±Ô∏è Registration response time: 331ms\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:07.120Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 594
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-8cf33c0af3d77057de9c",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 571,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Empty string for optional bio",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 66,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 345,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:619:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 619
                        },
                        "snippet": "\u001b[0m \u001b[90m 617 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 618 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 619 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 620 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 621 |\u001b[39m\n \u001b[90m 622 |\u001b[39m   test(\u001b[32m'[P2] Edge case - Unicode characters in name'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 619
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  617 |     });\n  618 |\n> 619 |     expect(response.status()).toBe(201);\n      |                               ^\n  620 |   });\n  621 |\n  622 |   test('[P2] Edge case - Unicode characters in name', async ({ request }) => {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:619:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:08.242Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 619
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-c03806ca0b1ff4ef56bc",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 602,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Unicode characters in name",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 67,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 346,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:638:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 638
                        },
                        "snippet": "\u001b[0m \u001b[90m 636 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 637 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 638 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 639 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 640 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mfirstName)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Fran√ßois'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 641 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mlastName)\u001b[33m.\u001b[39mtoBe(\u001b[32m'M√ºller'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 638
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  636 |     });\n  637 |\n> 638 |     expect(response.status()).toBe(201);\n      |                               ^\n  639 |     const body = await response.json();\n  640 |     expect(body.data.firstName).toBe('Fran√ßois');\n  641 |     expect(body.data.lastName).toBe('M√ºller');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:638:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:09.344Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 638
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-aafb57e3ef8490e9db18",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 622,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Very long bio (1000 characters)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 68,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 351,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:664:24",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 24,
                          "line": 664
                        },
                        "snippet": "\u001b[0m \u001b[90m 662 |\u001b[39m\n \u001b[90m 663 |\u001b[39m     \u001b[90m// Should either accept or reject gracefully\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 664 |\u001b[39m     expect([\u001b[35m201\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 665 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 666 |\u001b[39m\n \u001b[90m 667 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 24,
                            "line": 664
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n\n  662 |\n  663 |     // Should either accept or reject gracefully\n> 664 |     expect([201, 400]).toContain(response.status());\n      |                        ^\n  665 |   });\n  666 |\n  667 | });\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:664:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:10.440Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 24,
                        "line": 664
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-850f6a0247ff51998231",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 644,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Valid registration with all required fields",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 69,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 361,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:59:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 59
                        },
                        "snippet": "\u001b[0m \u001b[90m 57 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Response:'\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(body\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m;\u001b[39m\n \u001b[90m 58 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'userId'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'doctorId'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 59
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  57 |     console.log('Response:', JSON.stringify(body, null, 2));\n  58 |\n> 59 |     expect(response.status()).toBe(201);\n     |                               ^\n  60 |     expect(body.success).toBe(true);\n  61 |     expect(body.data).toHaveProperty('userId');\n  62 |     expect(body.data).toHaveProperty('doctorId');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:59:31"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "‚úÖ Test: Valid registration\n"
                        },
                        {
                          "text": "Status: \u001b[33m429\u001b[39m\n"
                        },
                        {
                          "text": "Response: {\n  \"error\": \"Too many registration attempts. Please try again later.\",\n  \"retryAfter\": 3600\n}\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:11.560Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 59
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-ab1cb7ffb903f370a2e8",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 33,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Registration with EU country (Germany)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 70,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 350,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:90:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 90
                        },
                        "snippet": "\u001b[0m \u001b[90m 88 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 89 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 90 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 91 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 92 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 93 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[32m'pending_review'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 90
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  88 |     });\n  89 |\n> 90 |     expect(response.status()).toBe(201);\n     |                               ^\n  91 |     const body = await response.json();\n  92 |     expect(body.success).toBe(true);\n  93 |     expect(body.data.status).toBe('pending_review');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:90:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:12.691Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 90
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-f3e2e0041bcddfe2ffe3",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 70,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Registration with Balkan country (Serbia)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 71,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 357,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:116:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 116
                        },
                        "snippet": "\u001b[0m \u001b[90m 114 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 115 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 116 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 117 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 118 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 119 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 116
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  114 |     });\n  115 |\n> 116 |     expect(response.status()).toBe(201);\n      |                               ^\n  117 |     const body = await response.json();\n  118 |     expect(body.success).toBe(true);\n  119 |   });\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:116:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:13.858Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 116
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-5ad6666a1f7a8aebac91",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 96,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - French RPPS number validation (11 digits)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 72,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 350,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:141:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 141
                        },
                        "snippet": "\u001b[0m \u001b[90m 139 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 140 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 141 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 142 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 143 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 144 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 141
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  139 |     });\n  140 |\n> 141 |     expect(response.status()).toBe(201);\n      |                               ^\n  142 |     const body = await response.json();\n  143 |     expect(body.success).toBe(true);\n  144 |   });\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:141:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:15.019Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 141
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-347d589bb6ec75e3e153",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 121,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT missing required fields",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 73,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 341,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:160:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 160
                        },
                        "snippet": "\u001b[0m \u001b[90m 158 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 159 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 160 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 161 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 162 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Missing required fields'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 163 |\u001b[39m     expect(body\u001b[33m.\u001b[39mrequired)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mArray\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 160
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  158 |     });\n  159 |\n> 160 |     expect(response.status()).toBe(400);\n      |                               ^\n  161 |     const body = await response.json();\n  162 |     expect(body.error).toBe('Missing required fields');\n  163 |     expect(body.required).toBeInstanceOf(Array);\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:160:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:16.196Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 160
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-a7d47e25de2aa08c16c8",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 150,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT invalid email format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 74,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 343,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:17.381Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-193390a8e3855051bda7",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 166,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT duplicate email",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 74,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 11,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:207:32",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 32,
                          "line": 207
                        },
                        "snippet": "\u001b[0m \u001b[90m 205 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 206 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 207 |\u001b[39m     expect(response1\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 208 |\u001b[39m\n \u001b[90m 209 |\u001b[39m     \u001b[90m// Second registration with same email\u001b[39m\n \u001b[90m 210 |\u001b[39m     \u001b[36mconst\u001b[39m payload2 \u001b[33m=\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 32,
                            "line": 207
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  205 |     });\n  206 |\n> 207 |     expect(response1.status()).toBe(201);\n      |                                ^\n  208 |\n  209 |     // Second registration with same email\n  210 |     const payload2 = {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:207:32"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:17.750Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 32,
                        "line": 207
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-9c0deb4fa4fed1da1eb7",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 186,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT duplicate license number",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 75,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 343,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:251:32",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 32,
                          "line": 251
                        },
                        "snippet": "\u001b[0m \u001b[90m 249 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 250 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 251 |\u001b[39m     expect(response1\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 252 |\u001b[39m\n \u001b[90m 253 |\u001b[39m     \u001b[90m// Second registration with same license number\u001b[39m\n \u001b[90m 254 |\u001b[39m     \u001b[36mconst\u001b[39m payload2 \u001b[33m=\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 32,
                            "line": 251
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  249 |     });\n  250 |\n> 251 |     expect(response1.status()).toBe(201);\n      |                                ^\n  252 |\n  253 |     // Second registration with same license number\n  254 |     const payload2 = {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:251:32"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:18.525Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 32,
                        "line": 251
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-58fd313aef2296f42356",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 230,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT ineligible country (USA)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 76,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 342,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:290:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 290
                        },
                        "snippet": "\u001b[0m \u001b[90m 288 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 289 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 290 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 291 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 292 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Country not eligible'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 293 |\u001b[39m     expect(body\u001b[33m.\u001b[39meligibleRegions)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mArray\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 290
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  288 |     });\n  289 |\n> 290 |     expect(response.status()).toBe(400);\n      |                               ^\n  291 |     const body = await response.json();\n  292 |     expect(body.error).toBe('Country not eligible');\n  293 |     expect(body.eligibleRegions).toBeInstanceOf(Array);\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:290:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:19.655Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 290
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-198c93d446de879128bb",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 274,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT invalid French RPPS (not 11 digits)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 77,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 346,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:312:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 312
                        },
                        "snippet": "\u001b[0m \u001b[90m 310 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 311 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 312 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 313 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 314 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Invalid license number'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 315 |\u001b[39m     expect(body\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoContain(\u001b[32m'11 digits'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 312
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  310 |     });\n  311 |\n> 312 |     expect(response.status()).toBe(400);\n      |                               ^\n  313 |     const body = await response.json();\n  314 |     expect(body.error).toBe('Invalid license number');\n  315 |     expect(body.message).toContain('11 digits');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:312:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:20.829Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 312
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-923fd327112934289ddd",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 296,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT license number too short (<5 chars)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 78,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 345,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:334:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 334
                        },
                        "snippet": "\u001b[0m \u001b[90m 332 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 333 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 334 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 335 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 336 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Invalid license number'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 337 |\u001b[39m     expect(body\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoContain(\u001b[32m'at least 5 characters'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 334
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  332 |     });\n  333 |\n> 334 |     expect(response.status()).toBe(400);\n      |                               ^\n  335 |     const body = await response.json();\n  336 |     expect(body.error).toBe('Invalid license number');\n  337 |     expect(body.message).toContain('at least 5 characters');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:334:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:21.960Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 334
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-f61b9d454d0a61323105",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 318,
              "column": 3
            },
            {
              "title": "[P0] Security - SQL Injection in email field",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 79,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 349,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:23.056Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-c83f442100e025d1ae35",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 344,
              "column": 3
            },
            {
              "title": "[P0] Security - XSS in firstName field",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 79,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 8,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:23.425Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-6685b1fcdf748400bb20",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 366,
              "column": 3
            },
            {
              "title": "[P0] Security - Rate limiting - 4th attempt should fail",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 79,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 24,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "Rate limit attempts: [\n  { attempt: \u001b[33m1\u001b[39m, status: \u001b[33m429\u001b[39m },\n  { attempt: \u001b[33m2\u001b[39m, status: \u001b[33m429\u001b[39m },\n  { attempt: \u001b[33m3\u001b[39m, status: \u001b[33m429\u001b[39m },\n  { attempt: \u001b[33m4\u001b[39m, status: \u001b[33m429\u001b[39m }\n]\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:23.443Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-248fb92adf21e5e1d363",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 393,
              "column": 3
            },
            {
              "title": "[P0] Security - Email blacklist enforcement (hard rejection)",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 79,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 9,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "Note: Email not blacklisted, test skipped\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:23.478Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-ac1f92f2f1bbd96c3b98",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 424,
              "column": 3
            },
            {
              "title": "[P1] GET /api/doctor-registration/eligible-countries - Returns correct country list",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 79,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 16,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:23.499Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-d5100bbac18945b66237",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 458,
              "column": 3
            },
            {
              "title": "[P1] All EU countries are eligible",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 79,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 22,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:23.524Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-8e482981bb1ba80dce3c",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 477,
              "column": 3
            },
            {
              "title": "[P1] All Balkan countries are eligible",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 79,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 9,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:23.554Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-1ecfcc5540937f090303",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 492,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number exactly 5 characters (minimum)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 79,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 7,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:523:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 523
                        },
                        "snippet": "\u001b[0m \u001b[90m 521 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 522 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 523 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 524 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 525 |\u001b[39m\n \u001b[90m 526 |\u001b[39m   test(\u001b[32m'[P1] BVA - License number 4 characters (below minimum)'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 523
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  521 |     });\n  522 |\n> 523 |     expect(response.status()).toBe(201);\n      |                               ^\n  524 |   });\n  525 |\n  526 |   test('[P1] BVA - License number 4 characters (below minimum)', async ({ request }) => {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:523:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:23.571Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 523
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-cf3bc2bc28781d9f163a",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 507,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number 4 characters (below minimum)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 80,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 350,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:542:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 542
                        },
                        "snippet": "\u001b[0m \u001b[90m 540 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 541 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 542 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 543 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 544 |\u001b[39m\n \u001b[90m 545 |\u001b[39m   test(\u001b[32m'[P1] BVA - License number 100 characters (stress test)'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 542
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  540 |     });\n  541 |\n> 542 |     expect(response.status()).toBe(400);\n      |                               ^\n  543 |   });\n  544 |\n  545 |   test('[P1] BVA - License number 100 characters (stress test)', async ({ request }) => {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:542:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:24.324Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 542
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-9fea42236cc215d10af6",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 526,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number 100 characters (stress test)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 81,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 347,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:564:24",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 24,
                          "line": 564
                        },
                        "snippet": "\u001b[0m \u001b[90m 562 |\u001b[39m\n \u001b[90m 563 |\u001b[39m     \u001b[90m// Should either accept (if no max limit) or reject gracefully\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 564 |\u001b[39m     expect([\u001b[35m201\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 565 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 566 |\u001b[39m\n \u001b[90m 567 |\u001b[39m   \u001b[90m// ========================================\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 24,
                            "line": 564
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n\n  562 |\n  563 |     // Should either accept (if no max limit) or reject gracefully\n> 564 |     expect([201, 400]).toContain(response.status());\n      |                        ^\n  565 |   });\n  566 |\n  567 |   // ========================================\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:564:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:25.472Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 24,
                        "line": 564
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-4bac0ddf026ce88eb4eb",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 545,
              "column": 3
            },
            {
              "title": "[P2] Performance - Registration response time < 2 seconds",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 82,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 349,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:594:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 594
                        },
                        "snippet": "\u001b[0m \u001b[90m 592 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m`‚è±Ô∏è Registration response time: ${responseTime}ms`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 593 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 594 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 595 |\u001b[39m     expect(responseTime)\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m2000\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// 2 seconds\u001b[39m\n \u001b[90m 596 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 597 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 594
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  592 |     console.log(`‚è±Ô∏è Registration response time: ${responseTime}ms`);\n  593 |\n> 594 |     expect(response.status()).toBe(201);\n      |                               ^\n  595 |     expect(responseTime).toBeLessThan(2000); // 2 seconds\n  596 |   });\n  597 |\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:594:31"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "‚è±Ô∏è Registration response time: 333ms\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:26.586Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 594
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-43bd4e6c83740cef471d",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 571,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Empty string for optional bio",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 83,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 359,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:619:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 619
                        },
                        "snippet": "\u001b[0m \u001b[90m 617 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 618 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 619 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 620 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 621 |\u001b[39m\n \u001b[90m 622 |\u001b[39m   test(\u001b[32m'[P2] Edge case - Unicode characters in name'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 619
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  617 |     });\n  618 |\n> 619 |     expect(response.status()).toBe(201);\n      |                               ^\n  620 |   });\n  621 |\n  622 |   test('[P2] Edge case - Unicode characters in name', async ({ request }) => {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:619:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:27.718Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 619
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-e59fa697c75b1dbcc755",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 602,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Unicode characters in name",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 84,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 348,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:638:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 638
                        },
                        "snippet": "\u001b[0m \u001b[90m 636 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 637 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 638 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 639 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 640 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mfirstName)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Fran√ßois'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 641 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mlastName)\u001b[33m.\u001b[39mtoBe(\u001b[32m'M√ºller'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 638
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  636 |     });\n  637 |\n> 638 |     expect(response.status()).toBe(201);\n      |                               ^\n  639 |     const body = await response.json();\n  640 |     expect(body.data.firstName).toBe('Fran√ßois');\n  641 |     expect(body.data.lastName).toBe('M√ºller');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:638:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:28.853Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 638
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-4ab2e16948bae246bfb2",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 622,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Very long bio (1000 characters)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [
                    {
                      "workerIndex": 85,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 348,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:664:24",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 24,
                          "line": 664
                        },
                        "snippet": "\u001b[0m \u001b[90m 662 |\u001b[39m\n \u001b[90m 663 |\u001b[39m     \u001b[90m// Should either accept or reject gracefully\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 664 |\u001b[39m     expect([\u001b[35m201\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 665 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 666 |\u001b[39m\n \u001b[90m 667 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 24,
                            "line": 664
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n\n  662 |\n  663 |     // Should either accept or reject gracefully\n> 664 |     expect([201, 400]).toContain(response.status());\n      |                        ^\n  665 |   });\n  666 |\n  667 | });\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:664:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:30.022Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 24,
                        "line": 664
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-afebe43b19959d2cab2b",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 644,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Valid registration with all required fields",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 86,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 353,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:59:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 59
                        },
                        "snippet": "\u001b[0m \u001b[90m 57 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'Response:'\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(body\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m;\u001b[39m\n \u001b[90m 58 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'userId'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'doctorId'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 59
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  57 |     console.log('Response:', JSON.stringify(body, null, 2));\n  58 |\n> 59 |     expect(response.status()).toBe(201);\n     |                               ^\n  60 |     expect(body.success).toBe(true);\n  61 |     expect(body.data).toHaveProperty('userId');\n  62 |     expect(body.data).toHaveProperty('doctorId');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:59:31"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "‚úÖ Test: Valid registration\n"
                        },
                        {
                          "text": "Status: \u001b[33m429\u001b[39m\n"
                        },
                        {
                          "text": "Response: {\n  \"error\": \"Too many registration attempts. Please try again later.\",\n  \"retryAfter\": 3600\n}\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:31.138Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 59
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-06fe0ae0de77f652fdd8",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 33,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Registration with EU country (Germany)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 87,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 352,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:90:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 90
                        },
                        "snippet": "\u001b[0m \u001b[90m 88 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 89 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 90 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 91 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 92 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 93 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[32m'pending_review'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 90
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  88 |     });\n  89 |\n> 90 |     expect(response.status()).toBe(201);\n     |                               ^\n  91 |     const body = await response.json();\n  92 |     expect(body.success).toBe(true);\n  93 |     expect(body.data.status).toBe('pending_review');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:90:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:32.257Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 90
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-dcf58a5c4d9b34949752",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 70,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - Registration with Balkan country (Serbia)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 88,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 349,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:116:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 116
                        },
                        "snippet": "\u001b[0m \u001b[90m 114 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 115 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 116 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 117 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 118 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 119 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 116
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  114 |     });\n  115 |\n> 116 |     expect(response.status()).toBe(201);\n      |                               ^\n  117 |     const body = await response.json();\n  118 |     expect(body.success).toBe(true);\n  119 |   });\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:116:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:33.389Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 116
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-b69a5c4aaa42767c5945",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 96,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - French RPPS number validation (11 digits)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 89,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 347,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:141:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 141
                        },
                        "snippet": "\u001b[0m \u001b[90m 139 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 140 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 141 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 142 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 143 |\u001b[39m     expect(body\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 144 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 141
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  139 |     });\n  140 |\n> 141 |     expect(response.status()).toBe(201);\n      |                               ^\n  142 |     const body = await response.json();\n  143 |     expect(body.success).toBe(true);\n  144 |   });\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:141:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:34.518Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 141
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-9be23615c070a7e56470",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 121,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT missing required fields",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 90,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 342,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:160:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 160
                        },
                        "snippet": "\u001b[0m \u001b[90m 158 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 159 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 160 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 161 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 162 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Missing required fields'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 163 |\u001b[39m     expect(body\u001b[33m.\u001b[39mrequired)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mArray\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 160
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  158 |     });\n  159 |\n> 160 |     expect(response.status()).toBe(400);\n      |                               ^\n  161 |     const body = await response.json();\n  162 |     expect(body.error).toBe('Missing required fields');\n  163 |     expect(body.required).toBeInstanceOf(Array);\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:160:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:35.612Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 160
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-56da30dddcba9f2c8dcb",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 150,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT invalid email format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 91,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 343,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:36.723Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-798f9f55ccfb9a417519",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 166,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT duplicate email",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 91,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 15,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:207:32",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 32,
                          "line": 207
                        },
                        "snippet": "\u001b[0m \u001b[90m 205 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 206 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 207 |\u001b[39m     expect(response1\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 208 |\u001b[39m\n \u001b[90m 209 |\u001b[39m     \u001b[90m// Second registration with same email\u001b[39m\n \u001b[90m 210 |\u001b[39m     \u001b[36mconst\u001b[39m payload2 \u001b[33m=\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 32,
                            "line": 207
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  205 |     });\n  206 |\n> 207 |     expect(response1.status()).toBe(201);\n      |                                ^\n  208 |\n  209 |     // Second registration with same email\n  210 |     const payload2 = {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:207:32"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:37.088Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 32,
                        "line": 207
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-f3ea847467067d368181",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 186,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT duplicate license number",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 92,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 339,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:251:32",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 32,
                          "line": 251
                        },
                        "snippet": "\u001b[0m \u001b[90m 249 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 250 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 251 |\u001b[39m     expect(response1\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 252 |\u001b[39m\n \u001b[90m 253 |\u001b[39m     \u001b[90m// Second registration with same license number\u001b[39m\n \u001b[90m 254 |\u001b[39m     \u001b[36mconst\u001b[39m payload2 \u001b[33m=\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 32,
                            "line": 251
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  249 |     });\n  250 |\n> 251 |     expect(response1.status()).toBe(201);\n      |                                ^\n  252 |\n  253 |     // Second registration with same license number\n  254 |     const payload2 = {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:251:32"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:37.846Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 32,
                        "line": 251
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-69bdad3719bd8fd7ae16",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 230,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT ineligible country (USA)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 93,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 347,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:290:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 290
                        },
                        "snippet": "\u001b[0m \u001b[90m 288 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 289 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 290 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 291 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 292 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Country not eligible'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 293 |\u001b[39m     expect(body\u001b[33m.\u001b[39meligibleRegions)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mArray\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 290
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  288 |     });\n  289 |\n> 290 |     expect(response.status()).toBe(400);\n      |                               ^\n  291 |     const body = await response.json();\n  292 |     expect(body.error).toBe('Country not eligible');\n  293 |     expect(body.eligibleRegions).toBeInstanceOf(Array);\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:290:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:38.979Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 290
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-80fb735b159afe6c3b05",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 274,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT invalid French RPPS (not 11 digits)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 94,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 353,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:312:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 312
                        },
                        "snippet": "\u001b[0m \u001b[90m 310 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 311 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 312 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 313 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 314 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Invalid license number'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 315 |\u001b[39m     expect(body\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoContain(\u001b[32m'11 digits'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 312
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  310 |     });\n  311 |\n> 312 |     expect(response.status()).toBe(400);\n      |                               ^\n  313 |     const body = await response.json();\n  314 |     expect(body.error).toBe('Invalid license number');\n  315 |     expect(body.message).toContain('11 digits');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:312:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:40.089Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 312
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-ae1d8a13a1eaaeb6f9e4",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 296,
              "column": 3
            },
            {
              "title": "[P0] POST /api/doctor-registration/signup - REJECT license number too short (<5 chars)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 95,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 348,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:334:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 334
                        },
                        "snippet": "\u001b[0m \u001b[90m 332 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 333 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 334 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 335 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 336 |\u001b[39m     expect(body\u001b[33m.\u001b[39merror)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Invalid license number'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 337 |\u001b[39m     expect(body\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoContain(\u001b[32m'at least 5 characters'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 334
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  332 |     });\n  333 |\n> 334 |     expect(response.status()).toBe(400);\n      |                               ^\n  335 |     const body = await response.json();\n  336 |     expect(body.error).toBe('Invalid license number');\n  337 |     expect(body.message).toContain('at least 5 characters');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:334:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:41.217Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 334
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-dd166205a7593342f79b",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 318,
              "column": 3
            },
            {
              "title": "[P0] Security - SQL Injection in email field",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 96,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 348,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:42.355Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-21cd45cda3f0e1798ce5",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 344,
              "column": 3
            },
            {
              "title": "[P0] Security - XSS in firstName field",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 96,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 8,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:42.723Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-fffb8a1f05b351e700e8",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 366,
              "column": 3
            },
            {
              "title": "[P0] Security - Rate limiting - 4th attempt should fail",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 96,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 21,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "Rate limit attempts: [\n  { attempt: \u001b[33m1\u001b[39m, status: \u001b[33m429\u001b[39m },\n  { attempt: \u001b[33m2\u001b[39m, status: \u001b[33m429\u001b[39m },\n  { attempt: \u001b[33m3\u001b[39m, status: \u001b[33m429\u001b[39m },\n  { attempt: \u001b[33m4\u001b[39m, status: \u001b[33m429\u001b[39m }\n]\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:42.742Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-2e0098dafef2bcb5f148",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 393,
              "column": 3
            },
            {
              "title": "[P0] Security - Email blacklist enforcement (hard rejection)",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 96,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 9,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "Note: Email not blacklisted, test skipped\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:42.775Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-7e9397cf5bff9d3ab742",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 424,
              "column": 3
            },
            {
              "title": "[P1] GET /api/doctor-registration/eligible-countries - Returns correct country list",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 96,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 17,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:42.796Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-8d6c72a8bd4f43a7ee07",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 458,
              "column": 3
            },
            {
              "title": "[P1] All EU countries are eligible",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 96,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 25,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:42.822Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-94088dd9c53c0cc11dbd",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 477,
              "column": 3
            },
            {
              "title": "[P1] All Balkan countries are eligible",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 96,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 9,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:42.855Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "d39dad932e25508e7b88-d7b1f593edf5d21d7614",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 492,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number exactly 5 characters (minimum)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 96,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 7,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:523:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 523
                        },
                        "snippet": "\u001b[0m \u001b[90m 521 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 522 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 523 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 524 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 525 |\u001b[39m\n \u001b[90m 526 |\u001b[39m   test(\u001b[32m'[P1] BVA - License number 4 characters (below minimum)'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 523
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  521 |     });\n  522 |\n> 523 |     expect(response.status()).toBe(201);\n      |                               ^\n  524 |   });\n  525 |\n  526 |   test('[P1] BVA - License number 4 characters (below minimum)', async ({ request }) => {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:523:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:42.873Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 523
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-3243c90b654780fea52b",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 507,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number 4 characters (below minimum)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 97,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 349,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:542:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 542
                        },
                        "snippet": "\u001b[0m \u001b[90m 540 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 541 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 542 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 543 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 544 |\u001b[39m\n \u001b[90m 545 |\u001b[39m   test(\u001b[32m'[P1] BVA - License number 100 characters (stress test)'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 542
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  540 |     });\n  541 |\n> 542 |     expect(response.status()).toBe(400);\n      |                               ^\n  543 |   });\n  544 |\n  545 |   test('[P1] BVA - License number 100 characters (stress test)', async ({ request }) => {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:542:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:43.642Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 542
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-4a0352930350dfec0162",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 526,
              "column": 3
            },
            {
              "title": "[P1] BVA - License number 100 characters (stress test)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 98,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 360,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:564:24",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 24,
                          "line": 564
                        },
                        "snippet": "\u001b[0m \u001b[90m 562 |\u001b[39m\n \u001b[90m 563 |\u001b[39m     \u001b[90m// Should either accept (if no max limit) or reject gracefully\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 564 |\u001b[39m     expect([\u001b[35m201\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 565 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 566 |\u001b[39m\n \u001b[90m 567 |\u001b[39m   \u001b[90m// ========================================\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 24,
                            "line": 564
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n\n  562 |\n  563 |     // Should either accept (if no max limit) or reject gracefully\n> 564 |     expect([201, 400]).toContain(response.status());\n      |                        ^\n  565 |   });\n  566 |\n  567 |   // ========================================\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:564:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:44.765Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 24,
                        "line": 564
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-61f90e7002e5de6eea5a",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 545,
              "column": 3
            },
            {
              "title": "[P2] Performance - Registration response time < 2 seconds",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 99,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 341,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:594:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 594
                        },
                        "snippet": "\u001b[0m \u001b[90m 592 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m`‚è±Ô∏è Registration response time: ${responseTime}ms`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 593 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 594 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 595 |\u001b[39m     expect(responseTime)\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m2000\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// 2 seconds\u001b[39m\n \u001b[90m 596 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 597 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 594
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  592 |     console.log(`‚è±Ô∏è Registration response time: ${responseTime}ms`);\n  593 |\n> 594 |     expect(response.status()).toBe(201);\n      |                               ^\n  595 |     expect(responseTime).toBeLessThan(2000); // 2 seconds\n  596 |   });\n  597 |\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:594:31"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "‚è±Ô∏è Registration response time: 324ms\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:45.895Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 594
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-d1222120b4487740f1f7",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 571,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Empty string for optional bio",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 100,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 350,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:619:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 619
                        },
                        "snippet": "\u001b[0m \u001b[90m 617 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 618 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 619 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 620 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 621 |\u001b[39m\n \u001b[90m 622 |\u001b[39m   test(\u001b[32m'[P2] Edge case - Unicode characters in name'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 619
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  617 |     });\n  618 |\n> 619 |     expect(response.status()).toBe(201);\n      |                               ^\n  620 |   });\n  621 |\n  622 |   test('[P2] Edge case - Unicode characters in name', async ({ request }) => {\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:619:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:47.001Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 619
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-3cb406f2804af79fa5dc",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 602,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Unicode characters in name",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 101,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 345,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:638:31",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 31,
                          "line": 638
                        },
                        "snippet": "\u001b[0m \u001b[90m 636 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 637 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 638 |\u001b[39m     expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 639 |\u001b[39m     \u001b[36mconst\u001b[39m body \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 640 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mfirstName)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Fran√ßois'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 641 |\u001b[39m     expect(body\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mlastName)\u001b[33m.\u001b[39mtoBe(\u001b[32m'M√ºller'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 31,
                            "line": 638
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m429\u001b[39m\n\n  636 |     });\n  637 |\n> 638 |     expect(response.status()).toBe(201);\n      |                               ^\n  639 |     const body = await response.json();\n  640 |     expect(body.data.firstName).toBe('Fran√ßois');\n  641 |     expect(body.data.lastName).toBe('M√ºller');\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:638:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:48.115Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 31,
                        "line": 638
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-637c975ca10b29ffc9c7",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 622,
              "column": 3
            },
            {
              "title": "[P2] Edge case - Very long bio (1000 characters)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [
                    {
                      "workerIndex": 102,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 345,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:664:24",
                        "location": {
                          "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                          "column": 24,
                          "line": 664
                        },
                        "snippet": "\u001b[0m \u001b[90m 662 |\u001b[39m\n \u001b[90m 663 |\u001b[39m     \u001b[90m// Should either accept or reject gracefully\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 664 |\u001b[39m     expect([\u001b[35m201\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 665 |\u001b[39m   })\u001b[33m;\u001b[39m\n \u001b[90m 666 |\u001b[39m\n \u001b[90m 667 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                            "column": 24,
                            "line": 664
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m429\u001b[39m\nReceived array: \u001b[31m[201, 400]\u001b[39m\n\n  662 |\n  663 |     // Should either accept or reject gracefully\n> 664 |     expect([201, 400]).toContain(response.status());\n      |                        ^\n  665 |   });\n  666 |\n  667 | });\n    at C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts:664:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-14T15:25:49.252Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\Users\\mings\\.apps\\DoktuTracker\\tests\\api\\doctor-registration-comprehensive.spec.ts",
                        "column": 24,
                        "line": 664
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d39dad932e25508e7b88-e48425f2f2f2f3d025c0",
              "file": "api/doctor-registration-comprehensive.spec.ts",
              "line": 644,
              "column": 3
            }
          ]
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-10-14T15:23:40.693Z",
    "duration": 186927.348,
    "expected": 67,
    "skipped": 0,
    "unexpected": 161,
    "flaky": 0
  }
}

[36m  Serving HTML report at http://localhost:59016. Press Ctrl+C to quit.[39m
